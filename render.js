!function(e,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define([],n):"object"==typeof exports?exports.static=n():e.static=n()}(global,(function(){return function(e){var n={};function a(t){if(n[t])return n[t].exports;var s=n[t]={i:t,l:!1,exports:{}};return e[t].call(s.exports,s,s.exports,a),s.l=!0,s.exports}return a.m=e,a.c=n,a.d=function(e,n,t){a.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(e,n){if(1&n&&(e=a(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(a.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var s in e)a.d(t,s,function(n){return e[n]}.bind(null,s));return t},a.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(n,"a",n),n},a.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},a.p="/treat/",a(a.s=22)}([function(e,n){e.exports=require("react")},function(e,n){e.exports=require("@mdx-js/tag")},function(e,n){e.exports=require("react-treat")},function(e,n){e.exports=require("classnames")},function(e,n){e.exports=require("react-router-dom")},function(e,n){e.exports=require("react-head")},function(e,n){e.exports=require("react-dom/server")},function(e,n){e.exports=require("react-router-hash-link")},function(e){e.exports=JSON.parse('[{"fileName":"introduction.md","id":"introduction","route":"/","sections":[{"raw":"# Themeable","level":1,"name":"Themeable","breadcrumbs":["Themeable"],"content":", statically extracted CSS&#8209;in&#8209;JS with near&#8209;zero runtime.  Write your styles in JavaScript/TypeScript within treat files** (e.g. Button.treat.js) that get executed at build time.  All CSS rules are created ahead of time, so the runtime is very_ lightweight—only needing to swap out pre-existing classes. In fact, if your application doesn\'t use theming, you don\'t even need the runtime at all.  All CSS logic, including its dependencies, will not be included in your final bundle.  Because theming is achieved by generating multiple classes, **_legacy browsers are supported.","page":"Introduction","hash":"themeable"},{"raw":"## Requirements","level":2,"name":"Requirements","breadcrumbs":["Themeable","Requirements"],"content":"  Your project must be using webpack with the supplied webpack plugin, but that\'s it.  First-class support is provided for React and TypeScript, but those layers are entirely optional. The core runtime API can be integrated into other frameworks, if needed.  The runtime makes use of Map, so you may need a polyfill for pre-ES2015 browsers.","page":"Introduction","hash":"requirements"},{"raw":"## Basic usage","level":2,"name":"Basic usage","breadcrumbs":["Themeable","Basic usage"],"content":"  First, install the core library.","page":"Introduction","hash":"basic-usage"},{"raw":"## Themed usage","level":2,"name":"Themed usage","breadcrumbs":["Themeable","Themed usage"],"content":"This themed usage example makes use of react-treat to keep things simple. React is not required to use treat.  First, install react-treat.","page":"Introduction","hash":"themed-usage"}]},{"fileName":"background.md","id":"background","route":"/background","sections":[{"raw":"# Background","level":1,"name":"Background","breadcrumbs":["Background"],"content":"","page":"Background","hash":"background"},{"raw":"## Tradeoffs","level":2,"name":"Tradeoffs","breadcrumbs":["Background","Tradeoffs"],"content":"  There are plenty of great CSS-in-JS solutions available—and we\'re big fans of them. However, treat has taken quite a different approach.  The primary goals of treat are full static extraction, minimal runtime code, type safety and legacy browser support. While a great developer experience is important to us, it will never come at the cost of these goals.  Unlike a lot of CSS-in-JS approaches, treat is much more similar to CSS Modules, requiring a bit more work to bind styles to your components. It\'s also unable to generate styles at runtime, which means it cannot handle dynamic theming. The upside of treat is that it allows you to craft themeable, statically extracted CSS using JavaScript (or TypeScript) with little impact to bundle size and negligible runtime performance cost.  If you\'re used to libraries like styled-components or Emotion, treat might seem like a step backwards. These libraries can quickly and easily create dynamic component-oriented styles. However, they come with a bundle size and performance cost. For plenty of applications, this is a worthwhile tradeoff—and these libraries are a great choice if this isn\'t an issue for you.  If you\'re familiar with static CSS-in-JS libraries like Linaria and Astroturf, treat is very similar but with a couple of notable differences. Firstly, treat\'s theming mechanism doesn\'t require CSS custom property support (i.e. CSS variables), which means that legacy browsers like IE11 are supported. Secondly, styles are written as objects rather than template literals, to both ensure type safety, and to encourage you to think of your styles as data rather than strings of CSS.","page":"Background","hash":"tradeoffs"},{"raw":"## Backstory","level":2,"name":"Backstory","breadcrumbs":["Background","Backstory"],"content":"You don\'t have to read this to understand treat, but it\'ll give you a much better understanding of where we\'re coming from.  The origins of treat begin with Braid, our design system.  Braid was originally built with CSS Modules, but authored in JavaScript (via css-in-js-loader). Unfortunately, we were hitting up against the limits of this approach.  Problem #1: We were unable to author our CSS Modules in TypeScript.  When you attempt to write your CSS Modules in TypeScript, you export an entire style sheet object (which then gets converted to a CSS Module by postcss-js).  For example, let\'s assume we have the following style sheet:    The TypeScript compiler can\'t make sense of this without an understanding of the transformation happening within webpack. When looking at the raw source code, this doesn\'t make sense from a type perspective.  As a result, even though the rest of our project was now written in TypeScript, we were forced to keep our CSS written in JavaScript. As a workaround, we generated TypeScript declaration files (via our own css-modules-typescript-loader), but it was less than ideal.  Problem #2: CSS Modules only provided a single flat namespace to work with.  We were generating themed collections of utility classes and wanted to export multiple namespaces from a single file, e.g. paddingTop, background, color, etc.  We were forced to manually namespace properties with underscores, which required a lot of boilerplate code to convert these into nested data structures (e.g. converting paddingTop_large into paddingTop.large).  TypeScript made this particularly painful because we also had to maintain type definitions for these extra translation steps.  Potential solution: Runtime CSS-in-JS?  At this point we talked about migrating to a runtime CSS-in-JS library like styled-components or Emotion. In fact, if we were starting from scratch, it\'s likely we would have simply reached for one of these libraries. That certainly would have solved our immediate problems.  However, we weren\'t starting from scratch. Instead, we were beginning to roll out our new design system to an existing, well-established ecosystem that had grown accustomed to the technical tradeoffs and runtime characteristics of CSS Modules.  Some of our projects are particularly sensitive to changes in bundle size and runtime performance, and we didn\'t want to negatively impact these projects from the outside. Some of our projects are even shipped as standalone JavaScript widgets into external codebases. We wanted to be sure that our new design system wouldn\'t come with a noticeable change in footprint.  We did leave the door open to adopting this architecture in the future, but decided that we wanted to see how far we could go with our current set of tradeoffs.  Potential solution: Static CSS-in-JS?  The next step for us was to investigate libraries like Linaria and Astroturf, which are both really interesting attempts at getting the best of both worlds—CSS-in-JS without the runtime overhead.  Unfortunately, neither of them quite fit our particular needs.  Astroturf is a really lean solution to this problem, essentially supporting CSS Modules and standard preprocessors within JavaScript template literals. That makes it much more ergonomic than more traditional approaches, but it also inherits all of the limitations we were experiencing with CSS Modules.  Linaria looked a lot more promising due to its theming support, but it came with an important caveat. Theming is achieved via CSS custom properties (i.e. CSS variables), which means that legacy browsers like IE11 are not supported. This simply wasn\'t an option for us.  Potential solution: Something new?  As a result, we started talking about alternative ideas. Something that could offer the theming ability of Linaria, but without the reliance on CSS variables. Something that could offer the runtime characteristics of CSS Modules, while feeling like regular JavaScript (or, in our case, TypeScript).  That\'s when the early ideas for treat started to emerge.  Early API designs looked promising, and initial prototypes proved that the concept could be supported by webpack. We decided to start investing in this approach—slowly at first, but ramping up as it started to further prove itself.  We continued to refine treat over several months while we simultaneously worked on Braid, with the development of one supporting the other. The code in Braid was now much more maintainable than it was before, and treat ultimately shipped to production, supporting real applications, with only a couple of minor hiccups along the way.  After using treat internally for a considerable amount of time, we decided we were finally ready to share treat with the world—and here you are! 😎","page":"Background","hash":"backstory"},{"raw":"## Thanks","level":2,"name":"Thanks","breadcrumbs":["Background","Thanks"],"content":"  Johannes Ewald for letting us have the treat name on npm.  Nathan Nam Tran for creating css-in-js-loader, which served as the initial starting point for our approach.  SEEK for giving us the space to do interesting work.","page":"Background","hash":"thanks"}]},{"fileName":"how-it-works.md","id":"how-it-works","route":"/how-it-works","sections":[{"raw":"# How it works","level":1,"name":"How it works","breadcrumbs":["How it works"],"content":"","page":"How it works","hash":"how-it-works"},{"raw":"## Static extraction","level":2,"name":"Static extraction","breadcrumbs":["How it works","Static extraction"],"content":"  In order to support static extraction of CSS from JavaScript code, styles are authored in JavaScript files with a special extension (.treat.js / .treat.ts by default). We refer to these files as treat files.  These treat files are separated from regular JavaScript files so that they can be compiled and executed at build time rather than being executed in the browser.  Conceptually, this is no different to preprocessors like Sass and Less. The difference is that, rather than using a custom domain-specific language, treat lets you use JavaScript as your preprocessor.  Within treat files, treat provides a set of styling APIs for generating CSS. Calling these APIs will result in styles being added to your application bundle. In order to expose these styles to your application code, they must be explicitly exported:    Generated styles are separately passed through the webpack loader pipeline, which allows you to create static CSS files via mini-css-extract-plugin.  For more details, see our webpack setup guide.","page":"How it works","hash":"static-extraction"},{"raw":"## Theming","level":2,"name":"Theming","breadcrumbs":["How it works","Theming"],"content":"  For themed styles, treat generates a separate block of CSS for each theme.  For example, let\'s assume you have the following themes defined:    Note that the style order has changed, with the non-themed styles rising to the top of the file, which means that the inactive class will take precedence over the active class if both are used simultaneously.  To avoid this issue, it\'s recommended that you try not to rely on style overrides across multiple classes.","page":"How it works","hash":"theming"},{"raw":"## Runtime","level":2,"name":"Runtime","breadcrumbs":["How it works","Runtime"],"content":"If you\'re not using themed styles, the runtime is not required.  The treat runtime is extremely lightweight, only needing to perform a simple lookup to figure out which pre-generated CSS class belongs to which theme.  The core API for performing this task is the resolveStyles function (or useStyles if you\'re using React).  Let\'s assume we have a treat file with some complex exports:    Because module exports are static, the treat runtime caches the resolved styles object in memory, which means that this cloning and class resolution process only happens once per treat file and theme, for the lifetime of your application.  It\'s important to note that this resolved styles object has the same type signature as the original styleRefs object, which means that themed styles remain type safe.","page":"How it works","hash":"runtime"}]},{"fileName":"setup.md","id":"setup","route":"/setup","sections":[{"raw":"# Setup","level":1,"name":"Setup","breadcrumbs":["Setup"],"content":"","page":"Setup","hash":"setup"},{"raw":"## Webpack Setup","level":2,"name":"Webpack Setup","breadcrumbs":["Setup","Webpack Setup"],"content":"  To get started, add the treat webpack plugin to webpack.config.js. Since webpack is required to use treat, the webpack plugin is provided via the core treat package as treat/webpack-plugin.    For more configuration options, view the full list of webpack options.","page":"Setup","hash":"webpack-setup"},{"raw":"## Babel Setup","level":2,"name":"Babel Setup","breadcrumbs":["Setup","Babel Setup"],"content":"  In order to improve the debugging experience, treat also provides an optional Babel plugin.  First, install the plugin:","page":"Setup","hash":"babel-setup"},{"raw":"## Debugging","level":2,"name":"Debugging","breadcrumbs":["Setup","Debugging"],"content":"Note: This can be automated via our Babel plugin.  All styling APIs (except for globalStyle) have an optional argument that allows you to provide a local debug name.  For example, the local name for the following style will be style by default because treat doesn\'t have access to your variable name at runtime.","page":"Setup","hash":"debugging"},{"raw":"## Server side rendering","level":2,"name":"Server side rendering","breadcrumbs":["Setup","Server side rendering"],"content":"  Server-rendered apps will likely be running two webpack builds (one for the browser code, and one for the server code). The server config should disable CSS output by setting outputCSS to false.","page":"Setup","hash":"server-side-rendering"},{"raw":"## Bundle splitting","level":2,"name":"Bundle splitting","breadcrumbs":["Setup","Bundle splitting"],"content":"  If you\'d like to dynamically load themes, treat supports bundle splitting via webpack dynamic imports with no special setup.  In practice, it\'s likely you\'ll want to split your themes into separate CSS files. This is achieved by dynamic importing your treat files that call createTheme.  Let\'s assume you have a set of theme files that look like this:    If you\'re using the React API, you\'ll want to provide the theme to your TreatProvider.","page":"Setup","hash":"bundle-splitting"},{"raw":"## Gatsby Setup","level":2,"name":"Gatsby Setup","breadcrumbs":["Setup","Gatsby Setup"],"content":"  To use treat in a Gatsby project, install gatsby-plugin-treat and add it to your gatsby-config.js file like this:","page":"Setup","hash":"gatsby-setup"},{"raw":"## Next","level":2,"name":"Next","breadcrumbs":["Setup","Next"],"content":".js Setup  To use treat in a Next.js project, install next-treat and add it to your next.config.js file like this:","page":"Setup","hash":"next"}]},{"fileName":"data-types.md","id":"data-types","route":"/data-types","sections":[{"raw":"# Data Types","level":1,"name":"Data Types","breadcrumbs":["Data Types"],"content":"  While not an exhaustive list of all types defined in the library, this section covers the core data types that are essential to using the library.","page":"Data types","hash":"data-types"},{"raw":"## Styles","level":2,"name":"Styles","breadcrumbs":["Data Types","Styles"],"content":"  Type: object  When passing styles to the style, styleMap and styleTree functions, or returning styles from a ThemedStyles function, you\'ll need to define them in the following format.","page":"Data types","hash":"styles"},{"raw":"## ThemedStyles","level":2,"name":"ThemedStyles","breadcrumbs":["Data Types","ThemedStyles"],"content":"  Type: function  Accepts a Theme and returns a Styles object.","page":"Data types","hash":"themedstyles"},{"raw":"## Theme","level":2,"name":"Theme","breadcrumbs":["Data Types","Theme"],"content":"  When defining themes and consuming themes, the provided theme object uses the Theme type, which is any by default. This means that any usage of a theme will not be type-safe.  The simplest way to fix this is to override this type at a global level. For example, you could create a treat.d.ts file in your project with the following contents.","page":"Data types","hash":"theme"}]},{"fileName":"styling-api.md","id":"styling-api","route":"/styling-api","sections":[{"raw":"# Styling API","level":1,"name":"Styling API","breadcrumbs":["Styling API"],"content":"  The following styling APIs are only valid within treat files (e.g. Button.treat.js).","page":"Styling API","hash":"styling-api"},{"raw":"## createTheme","level":2,"name":"createTheme","breadcrumbs":["Styling API","createTheme"],"content":"  Type: function  The createTheme function allows you to register individual themes within a treat file.","page":"Styling API","hash":"createtheme"},{"raw":"## style","level":2,"name":"style","breadcrumbs":["Styling API","style"],"content":"styleMap  Type: function  The styleMap function allows you to easily create multiple namespaces within a treat file.    ## style","page":"Styling API","hash":"style"},{"raw":"## styleMap","level":2,"name":"styleMap","breadcrumbs":["Styling API","styleMap"],"content":"  Type: function  The styleMap function allows you to easily create multiple namespaces within a treat file.","page":"Styling API","hash":"stylemap"},{"raw":"## styleTree","level":2,"name":"styleTree","breadcrumbs":["Styling API","styleTree"],"content":"  Type: function  > Note: This is an advanced feature that you probably don\'t need. It can only create themed styles. Only use this if you\'ve exhausted all other options.  The styleTree function allows you to create complex, nested data structures based on your theme.  For example, if you wanted to create a nested atomic CSS structure (e.g. atoms.padding.top.desktop), which requires iterating over both your white space scale and your breakpoints, you could do the following:    > Note: When using styleTree, the babel-plugin does not add a local debug name for you, as it is too complex to infer in most cases. However, you can still manually pass a local debug name to the styleNode function you receive.","page":"Styling API","hash":"styletree"},{"raw":"## globalStyle","level":2,"name":"globalStyle","breadcrumbs":["Styling API","globalStyle"],"content":"  Type: function  The globalStyle function allows you to define selector-based styles. This function is purely a side effect and does not create a new class.","page":"Styling API","hash":"globalstyle"}]},{"fileName":"runtime-api.md","id":"runtime-api","route":"/runtime-api","sections":[{"raw":"# Runtime API","level":1,"name":"Runtime API","breadcrumbs":["Runtime API"],"content":"Note: If you\'re using React, you should use our React API instead.","page":"Runtime API","hash":"runtime-api"},{"raw":"## resolveStyles","level":2,"name":"resolveStyles","breadcrumbs":["Runtime API","resolveStyles"],"content":"  Type: function  Resolves styles for an entire treat file relative to a given theme.","page":"Runtime API","hash":"resolvestyles"},{"raw":"## resolveClassName","level":2,"name":"resolveClassName","breadcrumbs":["Runtime API","resolveClassName"],"content":"  Type: function  Resolves a single treat class name relative to a given theme.","page":"Runtime API","hash":"resolveclassname"}]},{"fileName":"react-api.md","id":"react-api","route":"/react-api","sections":[{"raw":"# React API","level":1,"name":"React API","breadcrumbs":["React API"],"content":"Note: React is not required to use treat.","page":"React API","hash":"react-api"},{"raw":"## TreatProvider","level":2,"name":"TreatProvider","breadcrumbs":["React API","TreatProvider"],"content":"  Type: Component  In order for the useStyles and useClassName Hooks to work, you\'ll need to render a TreatProvider higher in the tree.","page":"React API","hash":"treatprovider"},{"raw":"## useStyles","level":2,"name":"useStyles","breadcrumbs":["React API","useStyles"],"content":"  Type: function  A React Hook that resolves styles for an entire treat file relative to the current theme.","page":"React API","hash":"usestyles"},{"raw":"## useClassName","level":2,"name":"useClassName","breadcrumbs":["React API","useClassName"],"content":"  Type: function  A React Hook that resolves a single treat class relative to the current theme.","page":"React API","hash":"useclassname"}]},{"fileName":"webpack-options.md","id":"webpack-options","route":"/webpack-options","sections":[{"raw":"# Webpack Options","level":1,"name":"Webpack Options","breadcrumbs":["Webpack Options"],"content":"  The following options can be supplied to the included webpack plugin, e.g.    All configuration values are optional.  Some configuration defaults differ between production and development environments. This is inferred from your webpack mode setting.","page":"Webpack Options","hash":"webpack-options"},{"raw":"## outputLoaders","level":2,"name":"outputLoaders","breadcrumbs":["Webpack Options","outputLoaders"],"content":" Default: \'style-loader\'] Type: [Array of webpack loader configurations  Defines which loaders generated CSS should be passed through after css-loader. Strings (e.g. style-loader) and objects with options are supported.","page":"Webpack Options","hash":"outputloaders"},{"raw":"## test","level":2,"name":"test","breadcrumbs":["Webpack Options","test"],"content":" Default: /\\\\.treat.(js\\\\|ts)$/ Type: Webpack condition  Configures which files are considered to be treat files.","page":"Webpack Options","hash":"test"},{"raw":"## localIdentName","level":2,"name":"localIdentName","breadcrumbs":["Webpack Options","localIdentName"],"content":" Default (Production): \'[hash:base64:5]\' Default (Development): \'[name]-[local]\\\\[hash:base64:5]\'_ Type: \'string\'  Template string for naming CSS classes. Should always contain a hash option to avoid clashes.","page":"Webpack Options","hash":"localidentname"},{"raw":"## themeIdentName","level":2,"name":"themeIdentName","breadcrumbs":["Webpack Options","themeIdentName"],"content":" Default (Production): \'[hash:base64:4]\' Default (Development): \'\\\\[name]-[local]\\\\[hash:base64:4]\' Type: string  Same as localIdentName, but for themes. Useful for debugging which classes belong to which theme. Can also be a function that receives your theme, which is useful for minifying theme classes, e.g. theme => themeNames.indexOf(theme.name).","page":"Webpack Options","hash":"themeidentname"},{"raw":"## minify","level":2,"name":"minify","breadcrumbs":["Webpack Options","minify"],"content":" Default (Production): true Default (Development): false Type: boolean  Configures whether to minify the generated CSS.","page":"Webpack Options","hash":"minify"},{"raw":"## browsers","level":2,"name":"browsers","breadcrumbs":["Webpack Options","browsers"],"content":" Default: Browserslist config, if present. Type: Browserslist query  Configures which browsers to target when running generated CSS through autoprefixer.","page":"Webpack Options","hash":"browsers"},{"raw":"## outputCSS","level":2,"name":"outputCSS","breadcrumbs":["Webpack Options","outputCSS"],"content":" Default: true Type: boolean  Configures whether to output CSS in the resulting bundle. Useful for server rendered apps that have separate webpack builds for client and server code, only one of which needs to generate styles.","page":"Webpack Options","hash":"outputcss"}]}]')},function(e,n){e.exports=require("use-react-router")},function(e,n){e.exports=require("lodash/throttle")},function(e,n,a){e.exports=a.p+"3c0f21185028de58e4e604ccdb668206.png"},function(e,n,a){var t={"./background.md":13,"./data-types.md":14,"./how-it-works.md":15,"./introduction.md":16,"./react-api.md":17,"./runtime-api.md":18,"./setup.md":19,"./styling-api.md":20,"./webpack-options.md":21};function s(e){var n=o(e);return a(n)}function o(e){if(!a.o(t,e)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return t[e]}s.keys=function(){return Object.keys(t)},s.resolve=o,e.exports=s,s.id=12},function(e,n,a){"use strict";a.r(n),a.d(n,"readingTime",(function(){return m})),a.d(n,"default",(function(){return d})),a.d(n,"tableOfContents",(function(){return g})),a.d(n,"frontMatter",(function(){return k}));var t=a(0),s=a.n(t),o=a(1);function p(e){return(p="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function r(e,n){if(null==e)return{};var a,t,s=function(e,n){if(null==e)return{};var a,t,s={},o=Object.keys(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||(s[a]=e[a]);return s}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(s[a]=e[a])}return s}function c(e,n){for(var a=0;a<n.length;a++){var t=n[a];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(e,t.key,t)}}function l(e,n){return!n||"object"!==p(n)&&"function"!=typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function i(e){return(i=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function u(e,n){return(u=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}var m={text:"6 min read",minutes:5.485,time:329100,words:1097},d=function(e){function n(e){var a;return function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,n),(a=l(this,i(n).call(this,e))).layout=null,a}var a,t,p;return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&u(e,n)}(n,e),a=n,(t=[{key:"render",value:function(){var e=this.props,n=e.components;return r(e,["components"]),s.a.createElement(o.MDXTag,{name:"wrapper",components:n},s.a.createElement(o.MDXTag,{name:"h1",components:n,props:{id:"background"}},"Background"),s.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"tradeoffs"}},"Tradeoffs"),s.a.createElement(o.MDXTag,{name:"p",components:n},"There are plenty of great CSS-in-JS solutions available—and we’re big fans of them. However, treat has taken quite a different approach."),s.a.createElement(o.MDXTag,{name:"p",components:n},"The primary goals of treat are ",s.a.createElement(o.MDXTag,{name:"strong",components:n,parentName:"p"},"full static extraction, minimal runtime code, type safety and legacy browser support.")," While a great developer experience is important to us, it will never come at the cost of these goals."),s.a.createElement(o.MDXTag,{name:"p",components:n},"Unlike a lot of CSS-in-JS approaches, treat is much more similar to ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://github.com/css-modules/css-modules"}},"CSS Modules"),", requiring a bit more work to bind styles to your components. It’s also unable to generate styles at runtime, which means it cannot handle dynamic theming. The upside of treat is that it allows you to craft themeable, statically extracted CSS using JavaScript (or TypeScript) with little impact to bundle size and negligible runtime performance cost."),s.a.createElement(o.MDXTag,{name:"p",components:n},"If you’re used to libraries like ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://www.styled-components.com"}},"styled-components")," or ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://emotion.sh/"}},"Emotion"),", treat might seem like a step backwards. These libraries can quickly and easily create dynamic component-oriented styles. However, they come with a bundle size and performance cost. For plenty of applications, this is a worthwhile tradeoff—and these libraries are a great choice if this isn’t an issue for you."),s.a.createElement(o.MDXTag,{name:"p",components:n},"If you’re familiar with static CSS-in-JS libraries like ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://linaria.now.sh/"}},"Linaria")," and ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://github.com/4Catalyzer/astroturf"}},"Astroturf"),", treat is very similar but with a couple of notable differences. Firstly, treat’s theming mechanism doesn’t require CSS custom property support (i.e. CSS variables), which means that legacy browsers like IE11 are supported. Secondly, styles are written as objects rather than template literals, to both ensure type safety, and to encourage you to think of your styles as data rather than strings of CSS."),s.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"backstory"}},"Backstory"),s.a.createElement(o.MDXTag,{name:"blockquote",components:n},s.a.createElement(o.MDXTag,{name:"p",components:n,parentName:"blockquote"},"You don’t have to read this to understand treat, but it’ll give you a much better understanding of where we’re coming from.")),s.a.createElement(o.MDXTag,{name:"p",components:n},"The origins of treat begin with ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://github.com/seek-oss/braid-design-system"}},"Braid"),", our design system."),s.a.createElement(o.MDXTag,{name:"p",components:n},"Braid was originally built with CSS Modules, but authored in JavaScript (via ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://github.com/naistran/css-in-js-loader"}},"css-in-js-loader"),"). Unfortunately, we were hitting up against the limits of this approach."),s.a.createElement(o.MDXTag,{name:"p",components:n},s.a.createElement(o.MDXTag,{name:"strong",components:n,parentName:"p"},"Problem #1: We were unable to author our CSS Modules in TypeScript.")),s.a.createElement(o.MDXTag,{name:"p",components:n},"When you attempt to write your CSS Modules in TypeScript, you export an entire style sheet object (which then gets converted to a CSS Module by ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://github.com/postcss/postcss-js"}},"postcss-js"),")."),s.a.createElement(o.MDXTag,{name:"p",components:n},"For example, let’s assume we have the following style sheet:"),s.a.createElement(o.MDXTag,{name:"pre",components:n},s.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  <span class="token string">\'.someClass\'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    color<span class="token punctuation">:</span> <span class="token string">\'red\'</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n'}}})),s.a.createElement(o.MDXTag,{name:"p",components:n},"When importing this file, consumers can only see a flat ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"styles")," object, which is notably different to the object that was exported."),s.a.createElement(o.MDXTag,{name:"pre",components:n},s.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">import</span> styles <span class="token keyword">from</span> <span class="token string">\'./styles.css.js\'</span><span class="token punctuation">;</span>\n\nstyles<span class="token punctuation">.</span>someClass<span class="token punctuation">;</span> <span class="token comment">// \'GENERATED_CLASS_NAME\'</span>\n'}}})),s.a.createElement(o.MDXTag,{name:"p",components:n},"The TypeScript compiler can’t make sense of this without an understanding of the transformation happening within webpack. When looking at the raw source code, this doesn’t make sense from a type perspective."),s.a.createElement(o.MDXTag,{name:"p",components:n},"As a result, even though the rest of our project was now written in TypeScript, we were forced to keep our CSS written in JavaScript. As a workaround, we generated TypeScript declaration files (via our own ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://github.com/seek-oss/css-modules-typescript-loader"}},"css-modules-typescript-loader"),"), but it was less than ideal."),s.a.createElement(o.MDXTag,{name:"p",components:n},s.a.createElement(o.MDXTag,{name:"strong",components:n,parentName:"p"},"Problem #2: CSS Modules only provided a single flat namespace to work with.")),s.a.createElement(o.MDXTag,{name:"p",components:n},"We were generating themed collections of utility classes and wanted to export multiple namespaces from a single file, e.g. ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"paddingTop"),", ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"background"),", ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"color"),", etc."),s.a.createElement(o.MDXTag,{name:"p",components:n},"We were forced to manually namespace properties with underscores, which required a lot of boilerplate code to convert these into nested data structures (e.g. converting ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"paddingTop_large")," into ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"paddingTop.large"),")."),s.a.createElement(o.MDXTag,{name:"p",components:n},"TypeScript made this particularly painful because we also had to maintain type definitions for these extra translation steps."),s.a.createElement(o.MDXTag,{name:"p",components:n},s.a.createElement(o.MDXTag,{name:"strong",components:n,parentName:"p"},"Potential solution: Runtime CSS-in-JS?")),s.a.createElement(o.MDXTag,{name:"p",components:n},"At this point we talked about migrating to a runtime CSS-in-JS library like ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://www.styled-components.com"}},"styled-components")," or ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://emotion.sh/"}},"Emotion"),". In fact, if we were starting from scratch, it’s likely we would have simply reached for one of these libraries. That certainly would have solved our immediate problems."),s.a.createElement(o.MDXTag,{name:"p",components:n},"However, we weren’t starting from scratch. Instead, we were beginning to roll out our new design system to an existing, well-established ecosystem that had grown accustomed to the technical tradeoffs and runtime characteristics of CSS Modules."),s.a.createElement(o.MDXTag,{name:"p",components:n},"Some of our projects are particularly sensitive to changes in bundle size and runtime performance, and we didn’t want to negatively impact these projects from the outside. Some of our projects are even shipped as standalone JavaScript widgets into external codebases. We wanted to be sure that our new design system wouldn’t come with a noticeable change in footprint."),s.a.createElement(o.MDXTag,{name:"p",components:n},"We did leave the door open to adopting this architecture in the future, but decided that we wanted to see how far we could go with our current set of tradeoffs."),s.a.createElement(o.MDXTag,{name:"p",components:n},s.a.createElement(o.MDXTag,{name:"strong",components:n,parentName:"p"},"Potential solution: Static CSS-in-JS?")),s.a.createElement(o.MDXTag,{name:"p",components:n},"The next step for us was to investigate libraries like ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://linaria.now.sh/"}},"Linaria")," and ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://github.com/4Catalyzer/astroturf"}},"Astroturf"),", which are both really interesting attempts at getting the best of both worlds—CSS-in-JS without the runtime overhead."),s.a.createElement(o.MDXTag,{name:"p",components:n},"Unfortunately, neither of them quite fit our particular needs."),s.a.createElement(o.MDXTag,{name:"p",components:n},s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://github.com/4Catalyzer/astroturf"}},"Astroturf")," is a really lean solution to this problem, essentially supporting CSS Modules and standard preprocessors within JavaScript template literals. That makes it much more ergonomic than more traditional approaches, but it also inherits all of the limitations we were experiencing with CSS Modules."),s.a.createElement(o.MDXTag,{name:"p",components:n},s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://linaria.now.sh/"}},"Linaria")," looked a lot more promising due to its theming support, but it came with an important caveat. Theming is achieved via CSS custom properties (i.e. CSS variables), which means that legacy browsers like IE11 are not supported. This simply wasn’t an option for us."),s.a.createElement(o.MDXTag,{name:"p",components:n},s.a.createElement(o.MDXTag,{name:"strong",components:n,parentName:"p"},"Potential solution: Something new?")),s.a.createElement(o.MDXTag,{name:"p",components:n},"As a result, we started talking about alternative ideas. Something that could offer the theming ability of Linaria, but without the reliance on CSS variables. Something that could offer the runtime characteristics of CSS Modules, while feeling like regular JavaScript (or, in our case, TypeScript)."),s.a.createElement(o.MDXTag,{name:"p",components:n},"That’s when the early ideas for treat started to emerge."),s.a.createElement(o.MDXTag,{name:"p",components:n},"Early API designs looked promising, and initial prototypes proved that the concept could be supported by webpack. We decided to start investing in this approach—slowly at first, but ramping up as it started to further prove itself."),s.a.createElement(o.MDXTag,{name:"p",components:n},"We continued to refine treat over several months while we simultaneously worked on Braid, with the development of one supporting the other. The code in Braid was now much more maintainable than it was before, and treat ultimately shipped to production, supporting real applications, with only a couple of minor hiccups along the way."),s.a.createElement(o.MDXTag,{name:"p",components:n},"After using treat internally for a considerable amount of time, we decided we were finally ready to share treat with the world—and here you are! 😎"),s.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"thanks"}},"Thanks"),s.a.createElement(o.MDXTag,{name:"p",components:n},s.a.createElement(o.MDXTag,{name:"strong",components:n,parentName:"p"},s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"strong",props:{href:"https://twitter.com/Jhnnns"}},"Johannes Ewald"))," for letting us have the ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"treat")," name on npm."),s.a.createElement(o.MDXTag,{name:"p",components:n},s.a.createElement(o.MDXTag,{name:"strong",components:n,parentName:"p"},s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"strong",props:{href:"https://twitter.com/naistran"}},"Nathan Nam Tran"))," for creating ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://github.com/naistran/css-in-js-loader"}},"css-in-js-loader"),", which served as the initial starting point for our approach."),s.a.createElement(o.MDXTag,{name:"p",components:n},s.a.createElement(o.MDXTag,{name:"strong",components:n,parentName:"p"},s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"strong",props:{href:"https://www.seek.com.au"}},"SEEK"))," for giving us the space to do interesting work."))}}])&&c(a.prototype,t),p&&c(a,p),n}(s.a.Component),g=function(){arguments.length>0&&void 0!==arguments[0]&&arguments[0];return[{id:"tradeoffs",level:2,title:"Tradeoffs",children:[]},{id:"backstory",level:2,title:"Backstory",children:[]},{id:"thanks",level:2,title:"Thanks",children:[]}]},k={title:"Background"}},function(e,n,a){"use strict";a.r(n),a.d(n,"readingTime",(function(){return m})),a.d(n,"default",(function(){return d})),a.d(n,"tableOfContents",(function(){return g})),a.d(n,"frontMatter",(function(){return k}));var t=a(0),s=a.n(t),o=a(1);function p(e){return(p="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function r(e,n){if(null==e)return{};var a,t,s=function(e,n){if(null==e)return{};var a,t,s={},o=Object.keys(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||(s[a]=e[a]);return s}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(s[a]=e[a])}return s}function c(e,n){for(var a=0;a<n.length;a++){var t=n[a];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(e,t.key,t)}}function l(e,n){return!n||"object"!==p(n)&&"function"!=typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function i(e){return(i=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function u(e,n){return(u=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}var m={text:"3 min read",minutes:2.3,time:138e3,words:460},d=function(e){function n(e){var a;return function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,n),(a=l(this,i(n).call(this,e))).layout=null,a}var a,t,p;return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&u(e,n)}(n,e),a=n,(t=[{key:"render",value:function(){var e=this.props,n=e.components;return r(e,["components"]),s.a.createElement(o.MDXTag,{name:"wrapper",components:n},s.a.createElement(o.MDXTag,{name:"h1",components:n,props:{id:"data-types"}},"Data Types"),s.a.createElement(o.MDXTag,{name:"p",components:n},"While not an exhaustive list of all types defined in the library, this section covers the core data types that are essential to using the library."),s.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"styles"}},"Styles"),s.a.createElement(o.MDXTag,{name:"p",components:n},"Type: ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"object")),s.a.createElement(o.MDXTag,{name:"p",components:n},"When passing styles to the ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"styling-api#style"}},s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"a"},"style")),", ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"styling-api#stylemap"}},s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"a"},"styleMap"))," and ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"styling-api#styletree"}},s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"a"},"styleTree"))," functions, or returning styles from a ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"#themedstyles"}},s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"a"},"ThemedStyles")," function"),", you’ll need to define them in the following format."),s.a.createElement(o.MDXTag,{name:"pre",components:n},s.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token punctuation">{</span>\n  color<span class="token punctuation">:</span> <span class="token string">\'red\'</span><span class="token punctuation">,</span>\n  fontFamily<span class="token punctuation">:</span> <span class="token string">\'comic sans ms\'</span><span class="token punctuation">,</span>\n  fontSize<span class="token punctuation">:</span> <span class="token number">24</span>\n<span class="token punctuation">}</span>\n'}}})),s.a.createElement(o.MDXTag,{name:"p",components:n},"Simple pseudo selectors are supported at the top level."),s.a.createElement(o.MDXTag,{name:"pre",components:n},s.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token punctuation">{</span>\n  color<span class="token punctuation">:</span> <span class="token string">\'red\'</span><span class="token punctuation">,</span>\n  <span class="token string">\':hover\'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    backgroundColor<span class="token punctuation">:</span> <span class="token string">\'pink\'</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token string">\':active\'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    backgroundColor<span class="token punctuation">:</span> <span class="token string">\'tomato\'</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n'}}})),s.a.createElement(o.MDXTag,{name:"p",components:n},"Media queries are also supported via the ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"@media")," key."),s.a.createElement(o.MDXTag,{name:"pre",components:n},s.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token punctuation">{</span>\n  fontSize<span class="token punctuation">:</span> <span class="token number">24</span><span class="token punctuation">,</span>\n  <span class="token string">\'@media\'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    <span class="token string">\'screen and (min-width: 768px)\'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      fontSize<span class="token punctuation">:</span> <span class="token number">42</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n'}}})),s.a.createElement(o.MDXTag,{name:"p",components:n},"For anything more advanced, you can provide a set of custom selectors. Within each selector, you must target the ampersand character (",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"&"),"), which refers to the element currently being styled."),s.a.createElement(o.MDXTag,{name:"pre",components:n},s.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token punctuation">{</span>\n  marginRight<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\n  selectors<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    <span class="token string">\'&amp;:nth-child(2n)\'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      marginRight<span class="token punctuation">:</span> <span class="token number">0</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n'}}})),s.a.createElement(o.MDXTag,{name:"p",components:n},"Within selectors, existing treat classes can be referenced with standard string interpolation."),s.a.createElement(o.MDXTag,{name:"pre",components:n},s.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token punctuation">{</span>\n  backgroundColor<span class="token punctuation">:</span> <span class="token string">\'white\'</span><span class="token punctuation">,</span>\n  selectors<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    <span class="token punctuation">[</span><span class="token template-string"><span class="token string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>parentClass<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> &amp;`</span></span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      backgroundColor<span class="token punctuation">:</span> <span class="token string">\'aqua\'</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n'}}})),s.a.createElement(o.MDXTag,{name:"p",components:n},"The ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"@keyframes")," property allows the creation of keyframes that will automatically be attached to the style as your ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"animation-name"),"."),s.a.createElement(o.MDXTag,{name:"pre",components:n},s.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token punctuation">{</span>\n  backgroundColor<span class="token punctuation">:</span> <span class="token string">\'white\'</span><span class="token punctuation">,</span>\n  <span class="token string">\'@keyframes\'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    <span class="token keyword">from</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      transform<span class="token punctuation">:</span> <span class="token string">\'rotate(0deg)\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    to<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      transform<span class="token punctuation">:</span> <span class="token string">\'rotate(359deg)\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  animationTimingFunction<span class="token punctuation">:</span> <span class="token string">\'linear\'</span><span class="token punctuation">,</span>\n  animationDuration<span class="token punctuation">:</span> <span class="token string">\'1.5s\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n'}}})),s.a.createElement(o.MDXTag,{name:"p",components:n},"The animation shorthand is also supported via a ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"@keyframes")," placeholder."),s.a.createElement(o.MDXTag,{name:"pre",components:n},s.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token punctuation">{</span>\n  backgroundColor<span class="token punctuation">:</span> <span class="token string">\'white\'</span><span class="token punctuation">,</span>\n  <span class="token string">\'@keyframes\'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    <span class="token keyword">from</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      transform<span class="token punctuation">:</span> <span class="token string">\'rotate(0deg)\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    to<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      transform<span class="token punctuation">:</span> <span class="token string">\'rotate(359deg)\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  animation<span class="token punctuation">:</span> <span class="token string">\'@keyframes 1.5s linear\'</span>\n<span class="token punctuation">}</span>\n'}}})),s.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"themedstyles"}},"ThemedStyles"),s.a.createElement(o.MDXTag,{name:"p",components:n},"Type: ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"function")),s.a.createElement(o.MDXTag,{name:"p",components:n},"Accepts a ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"#theme"}},s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"a"},"Theme"))," and returns a ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"#styles"}},s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"a"},"Styles")," object.")),s.a.createElement(o.MDXTag,{name:"pre",components:n},s.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token parameter">theme</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n  color<span class="token punctuation">:</span> theme<span class="token punctuation">.</span>brandColor\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n'}}})),s.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"theme"}},"Theme"),s.a.createElement(o.MDXTag,{name:"p",components:n},"When ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"styling-api#createtheme"}},"defining themes")," and ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"#themedstyles"}},"consuming themes"),", the provided theme object uses the ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"Theme")," type, which is ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"any")," by default. This means that any usage of a theme will not be type-safe."),s.a.createElement(o.MDXTag,{name:"p",components:n},"The simplest way to fix this is to override this type at a global level. For example, you could create a ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"treat.d.ts")," file in your project with the following contents."),s.a.createElement(o.MDXTag,{name:"pre",components:n},s.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-tsx","data-language":"tsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">declare</span> <span class="token keyword">module</span> <span class="token string">\'treat/theme\'</span> <span class="token punctuation">{</span>\n  <span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">Theme</span> <span class="token punctuation">{</span>\n    brandColor<span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n    grid<span class="token punctuation">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n'}}})),s.a.createElement(o.MDXTag,{name:"p",components:n},"If your ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"Theme")," type is already defined elsewhere in your application, you’ll need to import it with a dynamic ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"import")," expression within the module declaration block."),s.a.createElement(o.MDXTag,{name:"pre",components:n},s.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-tsx","data-language":"tsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">declare</span> <span class="token keyword">module</span> <span class="token string">\'treat/theme\'</span> <span class="token punctuation">{</span>\n  <span class="token keyword">type</span> MyTheme <span class="token operator">=</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">\'./types\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Theme<span class="token punctuation">;</span>\n  <span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">Theme</span> <span class="token keyword">extends</span> <span class="token class-name">MyTheme</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n'}}})),s.a.createElement(o.MDXTag,{name:"p",components:n},"Alternatively, if you’d prefer to avoid global types, you can manually annotate the theme object being passed into a ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"#themedstyles"}},s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"a"},"ThemedStyles")," function.")),s.a.createElement(o.MDXTag,{name:"pre",components:n},s.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-tsx","data-language":"tsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">import</span> <span class="token punctuation">{</span> style <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'treat\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Theme <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'./types\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> themedClass <span class="token operator">=</span> <span class="token function">style</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">theme<span class="token punctuation">:</span> Theme</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n  color<span class="token punctuation">:</span> theme<span class="token punctuation">.</span>brandColor\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n'}}})))}}])&&c(a.prototype,t),p&&c(a,p),n}(s.a.Component),g=function(){arguments.length>0&&void 0!==arguments[0]&&arguments[0];return[{id:"styles",level:2,title:"Styles",children:[]},{id:"themedstyles",level:2,title:"ThemedStyles",children:[]},{id:"theme",level:2,title:"Theme",children:[]}]},k={title:"Data types"}},function(e,n,a){"use strict";a.r(n),a.d(n,"readingTime",(function(){return m})),a.d(n,"default",(function(){return d})),a.d(n,"tableOfContents",(function(){return g})),a.d(n,"frontMatter",(function(){return k}));var t=a(0),s=a.n(t),o=a(1);function p(e){return(p="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function r(e,n){if(null==e)return{};var a,t,s=function(e,n){if(null==e)return{};var a,t,s={},o=Object.keys(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||(s[a]=e[a]);return s}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(s[a]=e[a])}return s}function c(e,n){for(var a=0;a<n.length;a++){var t=n[a];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(e,t.key,t)}}function l(e,n){return!n||"object"!==p(n)&&"function"!=typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function i(e){return(i=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function u(e,n){return(u=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}var m={text:"5 min read",minutes:4.2,time:252e3,words:840},d=function(e){function n(e){var a;return function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,n),(a=l(this,i(n).call(this,e))).layout=null,a}var a,t,p;return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&u(e,n)}(n,e),a=n,(t=[{key:"render",value:function(){var e=this.props,n=e.components;return r(e,["components"]),s.a.createElement(o.MDXTag,{name:"wrapper",components:n},s.a.createElement(o.MDXTag,{name:"h1",components:n,props:{id:"how-it-works"}},"How it works"),s.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"static-extraction"}},"Static extraction"),s.a.createElement(o.MDXTag,{name:"p",components:n},"In order to support static extraction of CSS from JavaScript code, styles are authored in JavaScript files with a special extension (",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},".treat.js")," / ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},".treat.ts")," by default). We refer to these files as ",s.a.createElement(o.MDXTag,{name:"em",components:n,parentName:"p"},"treat files.")),s.a.createElement(o.MDXTag,{name:"p",components:n},"These treat files are separated from regular JavaScript files so that they can be compiled and executed at build time rather than being executed in the browser."),s.a.createElement(o.MDXTag,{name:"p",components:n},"Conceptually, this is no different to preprocessors like ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://sass-lang.com/"}},"Sass")," and ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"http://lesscss.org/"}},"Less"),". The difference is that, rather than using a custom domain-specific language, treat lets you use ",s.a.createElement(o.MDXTag,{name:"em",components:n,parentName:"p"},"JavaScript")," as your preprocessor."),s.a.createElement(o.MDXTag,{name:"p",components:n},"Within treat files, treat provides a set of ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"styling-api"}},"styling APIs")," for generating CSS. Calling these APIs will result in styles being added to your application bundle. In order to expose these styles to your application code, they must be explicitly exported:"),s.a.createElement(o.MDXTag,{name:"pre",components:n},s.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token comment">// Button.treat.js</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> style <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'treat\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">const</span> button <span class="token operator">=</span> <span class="token function">style</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  backgroundColor<span class="token punctuation">:</span> <span class="token string">\'blue\'</span><span class="token punctuation">,</span>\n  height<span class="token punctuation">:</span> <span class="token number">48</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n'}}})),s.a.createElement(o.MDXTag,{name:"p",components:n},"When treat files are executed at build time, all of the exports are inlined into your bundle. For example, the treat file above would turn into this:"),s.a.createElement(o.MDXTag,{name:"pre",components:n},s.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">export</span> <span class="token keyword">var</span> button <span class="token operator">=</span> <span class="token string">\'GENERATED_CLASS_NAME\'</span><span class="token punctuation">;</span>\n'}}})),s.a.createElement(o.MDXTag,{name:"p",components:n},"Generated styles are separately passed through the webpack loader pipeline, which allows you to create static CSS files via ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://github.com/webpack-contrib/mini-css-extract-plugin"}},"mini-css-extract-plugin"),"."),s.a.createElement(o.MDXTag,{name:"p",components:n},s.a.createElement(o.MDXTag,{name:"em",components:n,parentName:"p"},"For more details, see our ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"em",props:{href:"setup#webpack-setup"}},"webpack setup")," guide.")),s.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"theming"}},"Theming"),s.a.createElement(o.MDXTag,{name:"p",components:n},"For ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"data-types#themedstyles"}},"themed styles"),", treat generates a separate block of CSS for each theme."),s.a.createElement(o.MDXTag,{name:"p",components:n},"For example, let’s assume you have the following themes defined:"),s.a.createElement(o.MDXTag,{name:"pre",components:n},s.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token comment">// themes.treat.js</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> createTheme <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'treat\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">const</span> greenTheme <span class="token operator">=</span> <span class="token function">createTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span> text<span class="token punctuation">:</span> <span class="token string">\'green\'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">export</span> <span class="token keyword">const</span> redTheme <span class="token operator">=</span> <span class="token function">createTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span> text<span class="token punctuation">:</span> <span class="token string">\'red\'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n'}}})),s.a.createElement(o.MDXTag,{name:"p",components:n},"Then, let’s assume you’ve written the following treat file:"),s.a.createElement(o.MDXTag,{name:"pre",components:n},s.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token comment">// text.treat.js</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> style <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'treat\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">const</span> text <span class="token operator">=</span> <span class="token function">style</span><span class="token punctuation">(</span><span class="token parameter">theme</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span> color<span class="token punctuation">:</span> theme<span class="token punctuation">.</span>text <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n'}}})),s.a.createElement(o.MDXTag,{name:"p",components:n},"This will generate the following CSS:"),s.a.createElement(o.MDXTag,{name:"pre",components:n},s.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-css","data-language":"css","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token selector">.text_greenTheme</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token selector">.text_redTheme</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n'}}})),s.a.createElement(o.MDXTag,{name:"p",components:n},"Now that we’ve generated styles for each theme, the ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"runtime-api"}},"runtime API")," can be used to resolve the correct class for the desired theme."),s.a.createElement(o.MDXTag,{name:"p",components:n},"Theming in this way allows full static extraction of themed styles. However, it comes with an important trade-off."),s.a.createElement(o.MDXTag,{name:"p",components:n},"In order to ensure consistent specificity across different themes, ",s.a.createElement(o.MDXTag,{name:"strong",components:n,parentName:"p"},"themed styles are generated with higher precedence than non-themed styles.")," As a result, you need to be mindful when attempting to override themed styles with non-themed styles within a single treat file."),s.a.createElement(o.MDXTag,{name:"p",components:n},"For example, let’s assume you’ve defined the following styles:"),s.a.createElement(o.MDXTag,{name:"pre",components:n},s.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">export</span> <span class="token keyword">const</span> inactive <span class="token operator">=</span> <span class="token function">style</span><span class="token punctuation">(</span><span class="token parameter">theme</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n  color<span class="token punctuation">:</span> theme<span class="token punctuation">.</span>text\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">const</span> active <span class="token operator">=</span> <span class="token function">style</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  color<span class="token punctuation">:</span> <span class="token string">\'white\'</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n'}}})),s.a.createElement(o.MDXTag,{name:"p",components:n},"Typically, if both of these classes were applied simultaneously to the same element, you would expect the ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"active")," styles to override the ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"inactive")," styles. However, in treat, this is not the case. The resulting style sheet would actually look something like this:"),s.a.createElement(o.MDXTag,{name:"pre",components:n},s.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-css","data-language":"css","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token selector">.active</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.inactive_greenTheme</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.inactive_redTheme</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n'}}})),s.a.createElement(o.MDXTag,{name:"p",components:n},"Note that the style order has changed, with the non-themed styles rising to the top of the file, which means that the ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"inactive")," class will take precedence over the ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"active")," class if both are used simultaneously."),s.a.createElement(o.MDXTag,{name:"p",components:n},"To avoid this issue, ",s.a.createElement(o.MDXTag,{name:"strong",components:n,parentName:"p"},"it’s recommended that you try not to rely on style overrides across multiple classes.")),s.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"runtime"}},"Runtime"),s.a.createElement(o.MDXTag,{name:"blockquote",components:n},s.a.createElement(o.MDXTag,{name:"p",components:n,parentName:"blockquote"},"If you’re not using themed styles, the runtime is ",s.a.createElement(o.MDXTag,{name:"strong",components:n,parentName:"p"},"not")," required.")),s.a.createElement(o.MDXTag,{name:"p",components:n},"The treat runtime is extremely lightweight, only needing to perform a simple lookup to figure out which pre-generated CSS class belongs to which theme."),s.a.createElement(o.MDXTag,{name:"p",components:n},"The core API for performing this task is the ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"runtime-api#resolvestyles"}},s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"a"},"resolveStyles"))," function (or ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"react-api#usestyles"}},s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"a"},"useStyles"))," if you’re using React)."),s.a.createElement(o.MDXTag,{name:"p",components:n},"Let’s assume we have a treat file with some complex exports:"),s.a.createElement(o.MDXTag,{name:"pre",components:n},s.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token comment">// styles.treat.js</span>\n<span class="token keyword">export</span> <span class="token keyword">const</span> topLevelExport <span class="token operator">=</span> <span class="token function">style</span><span class="token punctuation">(</span><span class="token parameter">theme</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n  color<span class="token punctuation">:</span> theme<span class="token punctuation">.</span>red\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">const</span> objectExport <span class="token operator">=</span> <span class="token punctuation">{</span>\n  key<span class="token punctuation">:</span> <span class="token function">style</span><span class="token punctuation">(</span><span class="token parameter">theme</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span> color<span class="token punctuation">:</span> theme<span class="token punctuation">.</span>blue <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">const</span> arrayExport <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token function">style</span><span class="token punctuation">(</span><span class="token parameter">theme</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span> color<span class="token punctuation">:</span> theme<span class="token punctuation">.</span>aqua <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token function">style</span><span class="token punctuation">(</span><span class="token parameter">theme</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span> color<span class="token punctuation">:</span> theme<span class="token punctuation">.</span>pink <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n'}}})),s.a.createElement(o.MDXTag,{name:"p",components:n},"We can then import this module and deeply resolve all styles with a single ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"runtime-api#resolvestyles"}},s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"a"},"resolveStyles"))," call."),s.a.createElement(o.MDXTag,{name:"blockquote",components:n},s.a.createElement(o.MDXTag,{name:"p",components:n,parentName:"blockquote"},"This is obviously a contrived example since we’re hard-coding the desired theme. Typically, you’d want to inject themes dynamically so that they can be configured at an application level. To see a good example of this pattern, see our ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"react-api"}},"React API"),".")),s.a.createElement(o.MDXTag,{name:"pre",components:n},s.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> styleRefs <span class="token keyword">from</span> <span class="token string">\'./styles.treat.js\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> greenTheme <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'./themes.treat.js\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> styles <span class="token operator">=</span> <span class="token function">resolveStyles</span><span class="token punctuation">(</span>greenTheme<span class="token punctuation">,</span> styleRefs<span class="token punctuation">)</span><span class="token punctuation">;</span>\n'}}})),s.a.createElement(o.MDXTag,{name:"p",components:n},"In this case, the ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"styles")," object is a deep clone of the ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"styleRefs")," object, with all themed classes resolved relative to ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"greenTheme"),":"),s.a.createElement(o.MDXTag,{name:"pre",components:n},s.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token punctuation">{</span>\n  topLevelExport<span class="token punctuation">:</span> <span class="token string">\'GENERATED_CLASS_NAME_1_greenTheme\'</span><span class="token punctuation">,</span>\n  objectExport<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'GENERATED_CLASS_NAME_2_greenTheme\'</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  arrayExport<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n    <span class="token string">\'GENERATED_CLASS_NAME_3_greenTheme\'</span><span class="token punctuation">,</span>\n    <span class="token string">\'GENERATED_CLASS_NAME_4_greenTheme\'</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n'}}})),s.a.createElement(o.MDXTag,{name:"p",components:n},"Because module exports are static, the treat runtime caches the resolved ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"styles")," object in memory, which means that this cloning and class resolution process only happens once per treat file and theme, for the lifetime of your application."),s.a.createElement(o.MDXTag,{name:"p",components:n},"It’s important to note that this resolved ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"styles")," object has the same type signature as the original ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"styleRefs")," object, which means that themed styles remain type safe."))}}])&&c(a.prototype,t),p&&c(a,p),n}(s.a.Component),g=function(){arguments.length>0&&void 0!==arguments[0]&&arguments[0];return[{id:"static-extraction",level:2,title:"Static extraction",children:[]},{id:"theming",level:2,title:"Theming",children:[]},{id:"runtime",level:2,title:"Runtime",children:[]}]},k={title:"How it works"}},function(e,n,a){"use strict";a.r(n),a.d(n,"readingTime",(function(){return m})),a.d(n,"default",(function(){return d})),a.d(n,"tableOfContents",(function(){return g})),a.d(n,"frontMatter",(function(){return k}));var t=a(0),s=a.n(t),o=a(1);function p(e){return(p="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function r(e,n){if(null==e)return{};var a,t,s=function(e,n){if(null==e)return{};var a,t,s={},o=Object.keys(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||(s[a]=e[a]);return s}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(s[a]=e[a])}return s}function c(e,n){for(var a=0;a<n.length;a++){var t=n[a];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(e,t.key,t)}}function l(e,n){return!n||"object"!==p(n)&&"function"!=typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function i(e){return(i=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function u(e,n){return(u=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}var m={text:"3 min read",minutes:2.62,time:157200.00000000003,words:524},d=function(e){function n(e){var a;return function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,n),(a=l(this,i(n).call(this,e))).layout=null,a}var a,t,p;return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&u(e,n)}(n,e),a=n,(t=[{key:"render",value:function(){var e=this.props,n=e.components;return r(e,["components"]),s.a.createElement(o.MDXTag,{name:"wrapper",components:n},s.a.createElement(o.MDXTag,{name:"h1",components:n,props:{id:"themeable-statically-extracted-cssinjs-with-nearzero-runtime"}},"Themeable, statically extracted CSS","‑","in","‑","JS with near","‑","zero runtime."),s.a.createElement(o.MDXTag,{name:"p",components:n},"Write your styles in JavaScript/TypeScript within ",s.a.createElement(o.MDXTag,{name:"strong",components:n,parentName:"p"},s.a.createElement(o.MDXTag,{name:"em",components:n,parentName:"strong"},"treat files"))," (e.g. ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"Button.treat.js"),") that get ",s.a.createElement(o.MDXTag,{name:"strong",components:n,parentName:"p"},s.a.createElement(o.MDXTag,{name:"em",components:n,parentName:"strong"},"executed at build time")),"."),s.a.createElement(o.MDXTag,{name:"p",components:n},"All CSS rules are created ahead of time, so the runtime is ",s.a.createElement(o.MDXTag,{name:"em",components:n,parentName:"p"},"very")," lightweight—only needing to swap out pre-existing classes. In fact, if your application doesn’t use theming, you don’t even need the runtime at all."),s.a.createElement(o.MDXTag,{name:"p",components:n},s.a.createElement(o.MDXTag,{name:"strong",components:n,parentName:"p"},"All CSS logic, including its dependencies, will not be included in your final bundle.")),s.a.createElement(o.MDXTag,{name:"p",components:n},"Because theming is achieved by generating multiple classes, ",s.a.createElement(o.MDXTag,{name:"strong",components:n,parentName:"p"},s.a.createElement(o.MDXTag,{name:"em",components:n,parentName:"strong"},"legacy browsers are supported."))),s.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"requirements"}},"Requirements"),s.a.createElement(o.MDXTag,{name:"p",components:n},"Your project must be using ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"webpack-options"}},"webpack")," with the supplied ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"webpack-options"}},"webpack plugin"),", but that’s it."),s.a.createElement(o.MDXTag,{name:"p",components:n},s.a.createElement(o.MDXTag,{name:"strong",components:n,parentName:"p"},"First-class support is provided for ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"strong",props:{href:"https://reactjs.org/"}},"React")," and ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"strong",props:{href:"https://www.typescriptlang.org/"}},"TypeScript"),",")," but those layers are ",s.a.createElement(o.MDXTag,{name:"em",components:n,parentName:"p"},"entirely optional.")," The core ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"runtime-api"}},"runtime API")," can be integrated into other frameworks, if needed."),s.a.createElement(o.MDXTag,{name:"p",components:n},"The runtime makes use of ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map"}},s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"a"},"Map")),", so you may need a ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://www.npmjs.com/package/es6-map"}},"polyfill")," for ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://caniuse.com/#feat=es6"}},"pre-ES2015 browsers.")),s.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"basic-usage"}},"Basic usage"),s.a.createElement(o.MDXTag,{name:"p",components:n},"First, install the core library."),s.a.createElement(o.MDXTag,{name:"pre",components:n},s.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-bash","data-language":"bash","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'$ <span class="token function">yarn</span> <span class="token function">add</span> treat\n'}}})),s.a.createElement(o.MDXTag,{name:"p",components:n},"Then, add the ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"setup#webpack-setup"}},"webpack plugin")," to your project. In this case, we’re using ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://github.com/webpack-contrib/mini-css-extract-plugin"}},"mini-css-extract-plugin")," to generate a static CSS file."),s.a.createElement(o.MDXTag,{name:"pre",components:n},s.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">const</span> TreatPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'treat/webpack-plugin\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'mini-css-extract-plugin\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n    <span class="token keyword">new</span> <span class="token class-name">TreatPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      outputLoaders<span class="token punctuation">:</span> <span class="token punctuation">[</span>MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">]</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n'}}})),s.a.createElement(o.MDXTag,{name:"p",components:n},"Next, define and export ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"data-types#styles"}},"styles")," from a treat file."),s.a.createElement(o.MDXTag,{name:"pre",components:n},s.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token comment">// Button.treat.js</span>\n<span class="token comment">// ** THIS CODE WON\'T END UP IN YOUR BUNDLE! **</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> style <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'treat\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">const</span> button <span class="token operator">=</span> <span class="token function">style</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  backgroundColor<span class="token punctuation">:</span> <span class="token string">\'blue\'</span><span class="token punctuation">,</span>\n  height<span class="token punctuation">:</span> <span class="token number">48</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n'}}})),s.a.createElement(o.MDXTag,{name:"p",components:n},"Finally, import the styles."),s.a.createElement(o.MDXTag,{name:"pre",components:n},s.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token comment">// Button.js</span>\n<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> styles <span class="token keyword">from</span> <span class="token string">\'./Button.treat.js\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">Button</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> text <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token template-string"><span class="token string">`\n  &lt;button class="</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>styles<span class="token punctuation">.</span>button<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">"></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>text<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/button>\n`</span></span><span class="token punctuation">;</span>\n'}}})),s.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"themed-usage"}},"Themed usage"),s.a.createElement(o.MDXTag,{name:"blockquote",components:n},s.a.createElement(o.MDXTag,{name:"p",components:n,parentName:"blockquote"},"This themed usage example makes use of ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"react-api"}},"react-treat")," to keep things simple. React is ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"runtime-api"}},"not required")," to use treat.")),s.a.createElement(o.MDXTag,{name:"p",components:n},"First, install react-treat."),s.a.createElement(o.MDXTag,{name:"pre",components:n},s.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-bash","data-language":"bash","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'$ <span class="token function">yarn</span> <span class="token function">add</span> react-treat\n'}}})),s.a.createElement(o.MDXTag,{name:"p",components:n},"Assuming you’ve already set up the ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"setup#webpack-setup"}},"webpack plugin"),", start by creating and exporting a theme from a treat file. Normally, you’d define multiple themes, but let’s keep it short."),s.a.createElement(o.MDXTag,{name:"pre",components:n},s.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token comment">// theme.treat.js</span>\n<span class="token comment">// ** THIS CODE WON\'T END UP IN YOUR BUNDLE! **</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> createTheme <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'treat\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">createTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  brandColor<span class="token punctuation">:</span> <span class="token string">\'blue\'</span><span class="token punctuation">,</span>\n  grid<span class="token punctuation">:</span> <span class="token number">4</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n'}}})),s.a.createElement(o.MDXTag,{name:"p",components:n},"Then, import the desired theme and pass it to ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"react-api#treatprovider"}},s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"a"},"TreatProvider"))," at the root of your application."),s.a.createElement(o.MDXTag,{name:"pre",components:n},s.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token comment">// App.js</span>\n<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> TreatProvider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react-treat\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> theme <span class="token keyword">from</span> <span class="token string">\'./theme.treat.js\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n  <span class="token operator">&lt;</span>TreatProvider theme<span class="token operator">=</span><span class="token punctuation">{</span>theme<span class="token punctuation">}</span><span class="token operator">></span><span class="token operator">...</span><span class="token operator">&lt;</span><span class="token operator">/</span>TreatProvider<span class="token operator">></span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n'}}})),s.a.createElement(o.MDXTag,{name:"p",components:n},"Now that you’ve configured the theming system, define and export ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"data-types#themedstyles"}},"themed styles")," from a treat file."),s.a.createElement(o.MDXTag,{name:"pre",components:n},s.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token comment">// Button.treat.js</span>\n<span class="token comment">// ** THIS CODE WON\'T END UP IN YOUR BUNDLE EITHER! **</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> style <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'treat\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">const</span> button <span class="token operator">=</span> <span class="token function">style</span><span class="token punctuation">(</span><span class="token parameter">theme</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n  backgroundColor<span class="token punctuation">:</span> theme<span class="token punctuation">.</span>brandColor<span class="token punctuation">,</span>\n  height<span class="token punctuation">:</span> theme<span class="token punctuation">.</span>grid <span class="token operator">*</span> <span class="token number">11</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n'}}})),s.a.createElement(o.MDXTag,{name:"blockquote",components:n},s.a.createElement(o.MDXTag,{name:"p",components:n,parentName:"blockquote"},"Themed styles have higher precedence than non-themed styles, regardless of document order. For more information, read the ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"how-it-works#theming"}},"theming")," guide.")),s.a.createElement(o.MDXTag,{name:"p",components:n},"Then import and resolve themed styles via the ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"react-api#usestyles"}},s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"a"},"useStyles")," Hook.")),s.a.createElement(o.MDXTag,{name:"pre",components:n},s.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token comment">// Button.js</span>\n<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> useStyles <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react-treat\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> styleRefs <span class="token keyword">from</span> <span class="token string">\'./Button.treat.js\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">Button</span> <span class="token operator">=</span> <span class="token parameter">props</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> styles <span class="token operator">=</span> <span class="token function">useStyles</span><span class="token punctuation">(</span>styleRefs<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> <span class="token operator">&lt;</span>button <span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span> className<span class="token operator">=</span><span class="token punctuation">{</span>styles<span class="token punctuation">.</span>button<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n'}}})))}}])&&c(a.prototype,t),p&&c(a,p),n}(s.a.Component),g=function(){arguments.length>0&&void 0!==arguments[0]&&arguments[0];return[{id:"requirements",level:2,title:"Requirements",children:[]},{id:"basic-usage",level:2,title:"Basic usage",children:[]},{id:"themed-usage",level:2,title:"Themed usage",children:[]}]},k={title:"Introduction"}},function(e,n,a){"use strict";a.r(n),a.d(n,"readingTime",(function(){return m})),a.d(n,"default",(function(){return d})),a.d(n,"tableOfContents",(function(){return g})),a.d(n,"frontMatter",(function(){return k}));var t=a(0),s=a.n(t),o=a(1);function p(e){return(p="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function r(e,n){if(null==e)return{};var a,t,s=function(e,n){if(null==e)return{};var a,t,s={},o=Object.keys(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||(s[a]=e[a]);return s}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(s[a]=e[a])}return s}function c(e,n){for(var a=0;a<n.length;a++){var t=n[a];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(e,t.key,t)}}function l(e,n){return!n||"object"!==p(n)&&"function"!=typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function i(e){return(i=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function u(e,n){return(u=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}var m={text:"1 min read",minutes:.84,time:50400,words:168},d=function(e){function n(e){var a;return function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,n),(a=l(this,i(n).call(this,e))).layout=null,a}var a,t,p;return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&u(e,n)}(n,e),a=n,(t=[{key:"render",value:function(){var e=this.props,n=e.components;return r(e,["components"]),s.a.createElement(o.MDXTag,{name:"wrapper",components:n},s.a.createElement(o.MDXTag,{name:"h1",components:n,props:{id:"react-api"}},"React API"),s.a.createElement(o.MDXTag,{name:"blockquote",components:n},s.a.createElement(o.MDXTag,{name:"p",components:n,parentName:"blockquote"},"Note: React is ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"runtime-api"}},"not required")," to use treat.")),s.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"treatprovider"}},"TreatProvider"),s.a.createElement(o.MDXTag,{name:"p",components:n},"Type: ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"Component")),s.a.createElement(o.MDXTag,{name:"p",components:n},"In order for the ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"#usestyles"}},s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"a"},"useStyles"))," and ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"#useclassname"}},s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"a"},"useClassName"))," Hooks to work, you’ll need to render a ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"TreatProvider")," higher in the tree."),s.a.createElement(o.MDXTag,{name:"pre",components:n},s.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> TreatProvider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react-treat\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> theme <span class="token keyword">from</span> <span class="token string">\'./theme.treat.js\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token operator">&lt;</span>TreatProvider theme<span class="token operator">=</span><span class="token punctuation">{</span>theme<span class="token punctuation">}</span><span class="token operator">></span><span class="token operator">...</span><span class="token operator">&lt;</span><span class="token operator">/</span>TreatProvider<span class="token operator">></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n'}}})),s.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"usestyles"}},"useStyles"),s.a.createElement(o.MDXTag,{name:"p",components:n},"Type: ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"function")),s.a.createElement(o.MDXTag,{name:"p",components:n},"A ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://reactjs.org/docs/hooks-intro.html"}},"React Hook")," that resolves styles for an entire treat file relative to the current theme."),s.a.createElement(o.MDXTag,{name:"pre",components:n},s.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> useStyles <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react-treat\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> styleRefs <span class="token keyword">from</span> <span class="token string">\'./Button.treat.js\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">Button</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> primary<span class="token punctuation">,</span> <span class="token operator">...</span>props <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> styles <span class="token operator">=</span> <span class="token function">useStyles</span><span class="token punctuation">(</span>styleRefs<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> <span class="token operator">&lt;</span>button <span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span> className<span class="token operator">=</span><span class="token punctuation">{</span>styles<span class="token punctuation">.</span>button<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n'}}})),s.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"useclassname"}},"useClassName"),s.a.createElement(o.MDXTag,{name:"p",components:n},"Type: ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"function")),s.a.createElement(o.MDXTag,{name:"p",components:n},"A ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://reactjs.org/docs/hooks-intro.html"}},"React Hook")," that resolves a single treat class relative to the current theme."),s.a.createElement(o.MDXTag,{name:"pre",components:n},s.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> useClassName <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react-treat\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> styleRefs <span class="token keyword">from</span> <span class="token string">\'./Button.treat.js\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">Button</span> <span class="token operator">=</span> <span class="token parameter">props</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n  <span class="token operator">&lt;</span>button\n    <span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span>\n    className<span class="token operator">=</span><span class="token punctuation">{</span><span class="token function">useClassName</span><span class="token punctuation">(</span>styles<span class="token punctuation">.</span>button<span class="token punctuation">)</span><span class="token punctuation">}</span>\n  <span class="token operator">/</span><span class="token operator">></span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n'}}})))}}])&&c(a.prototype,t),p&&c(a,p),n}(s.a.Component),g=function(){arguments.length>0&&void 0!==arguments[0]&&arguments[0];return[{id:"treatprovider",level:2,title:"TreatProvider",children:[]},{id:"usestyles",level:2,title:"useStyles",children:[]},{id:"useclassname",level:2,title:"useClassName",children:[]}]},k={title:"React API"}},function(e,n,a){"use strict";a.r(n),a.d(n,"readingTime",(function(){return m})),a.d(n,"default",(function(){return d})),a.d(n,"tableOfContents",(function(){return g})),a.d(n,"frontMatter",(function(){return k}));var t=a(0),s=a.n(t),o=a(1);function p(e){return(p="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function r(e,n){if(null==e)return{};var a,t,s=function(e,n){if(null==e)return{};var a,t,s={},o=Object.keys(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||(s[a]=e[a]);return s}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(s[a]=e[a])}return s}function c(e,n){for(var a=0;a<n.length;a++){var t=n[a];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(e,t.key,t)}}function l(e,n){return!n||"object"!==p(n)&&"function"!=typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function i(e){return(i=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function u(e,n){return(u=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}var m={text:"1 min read",minutes:.49,time:29400,words:98},d=function(e){function n(e){var a;return function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,n),(a=l(this,i(n).call(this,e))).layout=null,a}var a,t,p;return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&u(e,n)}(n,e),a=n,(t=[{key:"render",value:function(){var e=this.props,n=e.components;return r(e,["components"]),s.a.createElement(o.MDXTag,{name:"wrapper",components:n},s.a.createElement(o.MDXTag,{name:"h1",components:n,props:{id:"runtime-api"}},"Runtime API"),s.a.createElement(o.MDXTag,{name:"blockquote",components:n},s.a.createElement(o.MDXTag,{name:"p",components:n,parentName:"blockquote"},"Note: If you’re using React, you should use our ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"react-api"}},"React API")," instead.")),s.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"resolvestyles"}},"resolveStyles"),s.a.createElement(o.MDXTag,{name:"p",components:n},"Type: ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"function")),s.a.createElement(o.MDXTag,{name:"p",components:n},"Resolves styles for an entire treat file relative to a given theme."),s.a.createElement(o.MDXTag,{name:"pre",components:n},s.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">import</span> <span class="token punctuation">{</span> resolveStyles <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'treat\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> styleRefs <span class="token keyword">from</span> <span class="token string">\'./styles.treat.js\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> theme <span class="token keyword">from</span> <span class="token string">\'./theme.treat.js\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> styles <span class="token operator">=</span> <span class="token function">resolveStyles</span><span class="token punctuation">(</span>theme<span class="token punctuation">,</span> styleRefs<span class="token punctuation">)</span><span class="token punctuation">;</span>\n'}}})),s.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"resolveclassname"}},"resolveClassName"),s.a.createElement(o.MDXTag,{name:"p",components:n},"Type: ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"function")),s.a.createElement(o.MDXTag,{name:"p",components:n},"Resolves a single treat class name relative to a given theme."),s.a.createElement(o.MDXTag,{name:"pre",components:n},s.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">import</span> <span class="token punctuation">{</span> resolveClassName <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'treat\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> theme <span class="token keyword">from</span> <span class="token string">\'./theme.treat.js\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> styleRefs <span class="token keyword">from</span> <span class="token string">\'./Button.treat.js\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> className <span class="token operator">=</span> <span class="token function">resolveClassName</span><span class="token punctuation">(</span>theme<span class="token punctuation">,</span> styleRefs<span class="token punctuation">.</span>button<span class="token punctuation">)</span><span class="token punctuation">;</span>\n'}}})))}}])&&c(a.prototype,t),p&&c(a,p),n}(s.a.Component),g=function(){arguments.length>0&&void 0!==arguments[0]&&arguments[0];return[{id:"resolvestyles",level:2,title:"resolveStyles",children:[]},{id:"resolveclassname",level:2,title:"resolveClassName",children:[]}]},k={title:"Runtime API"}},function(e,n,a){"use strict";a.r(n),a.d(n,"readingTime",(function(){return m})),a.d(n,"default",(function(){return d})),a.d(n,"tableOfContents",(function(){return g})),a.d(n,"frontMatter",(function(){return k}));var t=a(0),s=a.n(t),o=a(1);function p(e){return(p="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function r(e,n){if(null==e)return{};var a,t,s=function(e,n){if(null==e)return{};var a,t,s={},o=Object.keys(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||(s[a]=e[a]);return s}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(s[a]=e[a])}return s}function c(e,n){for(var a=0;a<n.length;a++){var t=n[a];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(e,t.key,t)}}function l(e,n){return!n||"object"!==p(n)&&"function"!=typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function i(e){return(i=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function u(e,n){return(u=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}var m={text:"3 min read",minutes:2.775,time:166500,words:555},d=function(e){function n(e){var a;return function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,n),(a=l(this,i(n).call(this,e))).layout=null,a}var a,t,p;return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&u(e,n)}(n,e),a=n,(t=[{key:"render",value:function(){var e=this.props,n=e.components;return r(e,["components"]),s.a.createElement(o.MDXTag,{name:"wrapper",components:n},s.a.createElement(o.MDXTag,{name:"h1",components:n,props:{id:"setup"}},"Setup"),s.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"webpack-setup"}},"Webpack Setup"),s.a.createElement(o.MDXTag,{name:"p",components:n},"To get started, add the treat ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://webpack.js.org/"}},"webpack")," plugin to ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://webpack.js.org/concepts/configuration"}},s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"a"},"webpack.config.js")),". Since webpack is required to use treat, the webpack plugin is provided via the core ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"treat")," package as ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"treat/webpack-plugin"),"."),s.a.createElement(o.MDXTag,{name:"pre",components:n},s.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">const</span> TreatPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'treat/webpack-plugin\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">TreatPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n'}}})),s.a.createElement(o.MDXTag,{name:"p",components:n},"By default, this will inject styles into the page via ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://github.com/webpack-contrib/style-loader"}},"style-loader"),", but this can be overridden via the ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"outputLoaders")," option."),s.a.createElement(o.MDXTag,{name:"p",components:n},"For example, if you’d like to ",s.a.createElement(o.MDXTag,{name:"strong",components:n,parentName:"p"},"export static CSS files,")," you can wire it up to ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://github.com/webpack-contrib/mini-css-extract-plugin"}},"mini-css-extract-plugin"),"."),s.a.createElement(o.MDXTag,{name:"pre",components:n},s.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">const</span> TreatPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'treat/webpack-plugin\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'mini-css-extract-plugin\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n    <span class="token keyword">new</span> <span class="token class-name">TreatPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      outputLoaders<span class="token punctuation">:</span> <span class="token punctuation">[</span>MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">]</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n'}}})),s.a.createElement(o.MDXTag,{name:"p",components:n},"For more configuration options, view the full list of ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"webpack-options"}},"webpack options"),"."),s.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"babel-setup"}},"Babel Setup"),s.a.createElement(o.MDXTag,{name:"p",components:n},"In order to improve the ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"#debugging"}},"debugging")," experience, treat also provides an optional Babel plugin."),s.a.createElement(o.MDXTag,{name:"p",components:n},"First, install the plugin:"),s.a.createElement(o.MDXTag,{name:"pre",components:n},s.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-bash","data-language":"bash","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'$ <span class="token function">yarn</span> <span class="token function">add</span> --dev babel-plugin-treat\n'}}})),s.a.createElement(o.MDXTag,{name:"p",components:n},"Then, add it to your Babel config. For example, in ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},".babelrc"),":"),s.a.createElement(o.MDXTag,{name:"pre",components:n},s.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token punctuation">{</span>\n  <span class="token string">"plugins"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"babel-plugin-treat"</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n'}}})),s.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"debugging"}},"Debugging"),s.a.createElement(o.MDXTag,{name:"blockquote",components:n},s.a.createElement(o.MDXTag,{name:"p",components:n,parentName:"blockquote"},"Note: This can be automated via our ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"#babel-setup"}},"Babel plugin"),".")),s.a.createElement(o.MDXTag,{name:"p",components:n},"All styling APIs (except for ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"styling-api#globalstyle"}},s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"a"},"globalStyle")),") have an optional argument that allows you to provide a local debug name."),s.a.createElement(o.MDXTag,{name:"p",components:n},"For example, the local name for the following style will be ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"style")," by default because treat doesn’t have access to your variable name at runtime."),s.a.createElement(o.MDXTag,{name:"pre",components:n},s.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">export</span> <span class="token keyword">const</span> green <span class="token operator">=</span> <span class="token function">style</span><span class="token punctuation">(</span><span class="token punctuation">{</span> color<span class="token punctuation">:</span> <span class="token string">\'green\'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n'}}})),s.a.createElement(o.MDXTag,{name:"p",components:n},"To fix this, you can pass in a debug name as the last argument:"),s.a.createElement(o.MDXTag,{name:"pre",components:n},s.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">export</span> <span class="token keyword">const</span> green <span class="token operator">=</span> <span class="token function">style</span><span class="token punctuation">(</span><span class="token punctuation">{</span> color<span class="token punctuation">:</span> <span class="token string">\'green\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">\'green\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n'}}})),s.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"server-side-rendering"}},"Server side rendering"),s.a.createElement(o.MDXTag,{name:"p",components:n},"Server-rendered apps will likely be running two webpack builds (one for the browser code, and one for the server code). The server config should disable CSS output by setting ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"outputCSS")," to ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"false"),"."),s.a.createElement(o.MDXTag,{name:"pre",components:n},s.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">const</span> TreatPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'treat/webpack-plugin\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n    <span class="token keyword">new</span> <span class="token class-name">TreatPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      outputCSS<span class="token punctuation">:</span> <span class="token boolean">false</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n'}}})),s.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"bundle-splitting"}},"Bundle splitting"),s.a.createElement(o.MDXTag,{name:"p",components:n},"If you’d like to dynamically load themes, treat supports bundle splitting via ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://webpack.js.org/guides/code-splitting/#dynamic-imports"}},"webpack dynamic imports")," with no special setup."),s.a.createElement(o.MDXTag,{name:"p",components:n},"In practice, it’s likely you’ll want to split your themes into separate CSS files. This is achieved by dynamic importing your treat files that call ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"styling-api#createtheme"}},s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"a"},"createTheme")),"."),s.a.createElement(o.MDXTag,{name:"p",components:n},"Let’s assume you have a set of theme files that look like this:"),s.a.createElement(o.MDXTag,{name:"pre",components:n},s.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token comment">// mainTheme.treat.js</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> createTheme <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'treat\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">createTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token comment">// Theme variables...</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n'}}})),s.a.createElement(o.MDXTag,{name:"p",components:n},"You can then dynamically load the desired theme and use it to resolve styles."),s.a.createElement(o.MDXTag,{name:"pre",components:n},s.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">import</span> <span class="token punctuation">{</span> resolveStyles <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'treat\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> styleRefs <span class="token keyword">from</span> <span class="token string">\'./styles.treat\'</span><span class="token punctuation">;</span>\n\n<span class="token comment">// Inject the theme name somehow:</span>\n<span class="token keyword">const</span> themeName <span class="token operator">=</span> <span class="token function">getThemeName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`../themes/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>themeName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.treat`</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">theme</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> styles <span class="token operator">=</span> <span class="token function">resolveStyles</span><span class="token punctuation">(</span>theme<span class="token punctuation">.</span>default<span class="token punctuation">,</span> styleRefs<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token comment">// You now have access to themed styles!</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n'}}})),s.a.createElement(o.MDXTag,{name:"p",components:n},"If you’re using the ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"react-api"}},"React API"),", you’ll want to provide the theme to your ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"react-api#treatprovider"}},s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"a"},"TreatProvider")),"."),s.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"gatsby-setup"}},"Gatsby Setup"),s.a.createElement(o.MDXTag,{name:"p",components:n},"To use ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"treat")," in a ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://www.gatsbyjs.org"}},"Gatsby")," project, install ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"gatsby-plugin-treat")," and add it to your ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"gatsby-config.js")," file like this:"),s.a.createElement(o.MDXTag,{name:"pre",components:n},s.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token template-string"><span class="token string">`gatsby-plugin-treat`</span></span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n'}}})),s.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"nextjs-setup"}},"Next.js Setup"),s.a.createElement(o.MDXTag,{name:"p",components:n},"To use ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"treat")," in a ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://nextjs.org"}},"Next.js")," project, install ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"next-treat")," and add it to your ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"next.config.js")," file like this:"),s.a.createElement(o.MDXTag,{name:"pre",components:n},s.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">const</span> withTreat <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'next-treat\'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token comment">/* Extra TreatPlugin options */</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token function">withTreat</span><span class="token punctuation">(</span><span class="token comment">/* Additional Next.js configuration */</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n'}}})),s.a.createElement(o.MDXTag,{name:"p",components:n},"Debugging experience can be improved by ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"#babel-setup"}},"setting up the Babel plugin")," with the ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},".babelrc")," below:"),s.a.createElement(o.MDXTag,{name:"pre",components:n},s.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token punctuation">{</span>\n  <span class="token string">"presets"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"next/babel"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token string">"plugins"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"babel-plugin-treat"</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n'}}})))}}])&&c(a.prototype,t),p&&c(a,p),n}(s.a.Component),g=function(){arguments.length>0&&void 0!==arguments[0]&&arguments[0];return[{id:"webpack-setup",level:2,title:"Webpack Setup",children:[]},{id:"babel-setup",level:2,title:"Babel Setup",children:[]},{id:"debugging",level:2,title:"Debugging",children:[]},{id:"server-side-rendering",level:2,title:"Server side rendering",children:[]},{id:"bundle-splitting",level:2,title:"Bundle splitting",children:[]},{id:"gatsby-setup",level:2,title:"Gatsby Setup",children:[]},{id:"nextjs-setup",level:2,title:"Next.js Setup",children:[]}]},k={title:"Setup"}},function(e,n,a){"use strict";a.r(n),a.d(n,"readingTime",(function(){return m})),a.d(n,"default",(function(){return d})),a.d(n,"tableOfContents",(function(){return g})),a.d(n,"frontMatter",(function(){return k}));var t=a(0),s=a.n(t),o=a(1);function p(e){return(p="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function r(e,n){if(null==e)return{};var a,t,s=function(e,n){if(null==e)return{};var a,t,s={},o=Object.keys(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||(s[a]=e[a]);return s}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(s[a]=e[a])}return s}function c(e,n){for(var a=0;a<n.length;a++){var t=n[a];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(e,t.key,t)}}function l(e,n){return!n||"object"!==p(n)&&"function"!=typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function i(e){return(i=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function u(e,n){return(u=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}var m={text:"3 min read",minutes:2.685,time:161100,words:537},d=function(e){function n(e){var a;return function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,n),(a=l(this,i(n).call(this,e))).layout=null,a}var a,t,p;return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&u(e,n)}(n,e),a=n,(t=[{key:"render",value:function(){var e=this.props,n=e.components;return r(e,["components"]),s.a.createElement(o.MDXTag,{name:"wrapper",components:n},s.a.createElement(o.MDXTag,{name:"h1",components:n,props:{id:"styling-api"}},"Styling API"),s.a.createElement(o.MDXTag,{name:"p",components:n},"The following styling APIs are only valid within treat files (e.g. ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"Button.treat.js"),")."),s.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"createtheme"}},"createTheme"),s.a.createElement(o.MDXTag,{name:"p",components:n},"Type: ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"function")),s.a.createElement(o.MDXTag,{name:"p",components:n},"The ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"createTheme")," function allows you to register individual themes within a treat file."),s.a.createElement(o.MDXTag,{name:"pre",components:n},s.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">import</span> <span class="token punctuation">{</span> createTheme <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'treat\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> theme <span class="token operator">=</span> <span class="token function">createTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  brandColor<span class="token punctuation">:</span> <span class="token string">\'blue\'</span><span class="token punctuation">,</span>\n  grid<span class="token punctuation">:</span> <span class="token number">4</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n'}}})),s.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"style"}},"style"),s.a.createElement(o.MDXTag,{name:"p",components:n},"Type: ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"function")),s.a.createElement(o.MDXTag,{name:"p",components:n},"The ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"style")," function allows you to create individual style rules within a treat file."),s.a.createElement(o.MDXTag,{name:"pre",components:n},s.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">import</span> <span class="token punctuation">{</span> style <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'treat\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">const</span> brandColor <span class="token operator">=</span> <span class="token function">style</span><span class="token punctuation">(</span><span class="token parameter">theme</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n  color<span class="token punctuation">:</span> theme<span class="token punctuation">.</span>brandColor<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n'}}})),s.a.createElement(o.MDXTag,{name:"p",components:n},"If your styles aren’t dependent on the theme, you can provide a static object instead."),s.a.createElement(o.MDXTag,{name:"pre",components:n},s.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">import</span> <span class="token punctuation">{</span> style <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'treat\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">const</span> green <span class="token operator">=</span> <span class="token function">style</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  color<span class="token punctuation">:</span> <span class="token string">\'green\'</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n'}}})),s.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"stylemap"}},"styleMap"),s.a.createElement(o.MDXTag,{name:"p",components:n},"Type: ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"function")),s.a.createElement(o.MDXTag,{name:"p",components:n},"The ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"styleMap")," function allows you to easily create multiple namespaces within a treat file."),s.a.createElement(o.MDXTag,{name:"pre",components:n},s.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">import</span> <span class="token punctuation">{</span> styleMap <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'treat\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">const</span> variants <span class="token operator">=</span> <span class="token function">styleMap</span><span class="token punctuation">(</span><span class="token parameter">theme</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n  primary<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    backgroundColor<span class="token punctuation">:</span> theme<span class="token punctuation">.</span>colors<span class="token punctuation">.</span>brand\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  secondary<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    backgroundColor<span class="token punctuation">:</span> theme<span class="token punctuation">.</span>colors<span class="token punctuation">.</span>accent\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n'}}})),s.a.createElement(o.MDXTag,{name:"p",components:n},"This is particularly useful when mapping component props to separate style maps. For example, if you wanted to map these styles to a React component in TypeScript:"),s.a.createElement(o.MDXTag,{name:"pre",components:n},s.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-ts","data-language":"ts","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> useStyles <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react-treat\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> styleRefs <span class="token keyword">from</span> <span class="token string">\'./Button.treat\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">Button</span><span class="token punctuation">(</span><span class="token punctuation">{</span> variant <span class="token operator">=</span> <span class="token string">\'primary\'</span><span class="token punctuation">,</span> <span class="token operator">...</span>props <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> styles <span class="token operator">=</span> <span class="token function">useStyles</span><span class="token punctuation">(</span>styleRefs<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token operator">&lt;</span>button\n      <span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span>\n      className<span class="token operator">=</span><span class="token punctuation">{</span>styles<span class="token punctuation">.</span>variants<span class="token punctuation">[</span>variant<span class="token punctuation">]</span><span class="token punctuation">}</span>\n    <span class="token operator">/</span><span class="token operator">></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n'}}})),s.a.createElement(o.MDXTag,{name:"p",components:n},"This pattern scales extremely well to ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://css-tricks.com/lets-define-exactly-atomic-css/"}},"atomic CSS patterns"),". For example:"),s.a.createElement(o.MDXTag,{name:"pre",components:n},s.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token comment">// atoms.treat.js</span>\n\n<span class="token keyword">import</span> <span class="token punctuation">{</span> styleMap <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'treat\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> mapValues <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'lodash\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> spacingTokens <span class="token operator">=</span> <span class="token punctuation">{</span>\n  small<span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span>\n  medium<span class="token punctuation">:</span> <span class="token number">8</span><span class="token punctuation">,</span>\n  large<span class="token punctuation">:</span> <span class="token number">16</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">spacingStyles</span> <span class="token operator">=</span> <span class="token parameter">property</span> <span class="token operator">=></span>\n  <span class="token function">mapValues</span><span class="token punctuation">(</span>spacingTokens<span class="token punctuation">,</span> <span class="token parameter">value</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token punctuation">[</span>property<span class="token punctuation">]</span><span class="token punctuation">:</span> value\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">const</span> padding <span class="token operator">=</span> <span class="token punctuation">{</span>\n  top<span class="token punctuation">:</span> <span class="token function">styleMap</span><span class="token punctuation">(</span><span class="token function">spacingStyles</span><span class="token punctuation">(</span><span class="token string">\'paddingTop\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  bottom<span class="token punctuation">:</span> <span class="token function">styleMap</span><span class="token punctuation">(</span><span class="token function">spacingStyles</span><span class="token punctuation">(</span><span class="token string">\'paddingBottom\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  left<span class="token punctuation">:</span> <span class="token function">styleMap</span><span class="token punctuation">(</span><span class="token function">spacingStyles</span><span class="token punctuation">(</span><span class="token string">\'paddingLeft\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  right<span class="token punctuation">:</span> <span class="token function">styleMap</span><span class="token punctuation">(</span><span class="token function">spacingStyles</span><span class="token punctuation">(</span><span class="token string">\'paddingRight\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">const</span> margin <span class="token operator">=</span> <span class="token punctuation">{</span>\n  top<span class="token punctuation">:</span> <span class="token function">styleMap</span><span class="token punctuation">(</span><span class="token function">spacingStyles</span><span class="token punctuation">(</span><span class="token string">\'marginTop\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  bottom<span class="token punctuation">:</span> <span class="token function">styleMap</span><span class="token punctuation">(</span><span class="token function">spacingStyles</span><span class="token punctuation">(</span><span class="token string">\'marginBottom\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  left<span class="token punctuation">:</span> <span class="token function">styleMap</span><span class="token punctuation">(</span><span class="token function">spacingStyles</span><span class="token punctuation">(</span><span class="token string">\'marginLeft\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  right<span class="token punctuation">:</span> <span class="token function">styleMap</span><span class="token punctuation">(</span><span class="token function">spacingStyles</span><span class="token punctuation">(</span><span class="token string">\'marginRight\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token comment">// etc...</span>\n'}}})),s.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"styletree"}},"styleTree"),s.a.createElement(o.MDXTag,{name:"p",components:n},"Type: ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"function")),s.a.createElement(o.MDXTag,{name:"blockquote",components:n},s.a.createElement(o.MDXTag,{name:"p",components:n,parentName:"blockquote"},"Note: This is an advanced feature that you ",s.a.createElement(o.MDXTag,{name:"em",components:n,parentName:"p"},"probably")," don’t need. It can only create themed styles. Only use this if you’ve exhausted all other options.")),s.a.createElement(o.MDXTag,{name:"p",components:n},"The ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"styleTree")," function allows you to create complex, nested data structures based on your theme."),s.a.createElement(o.MDXTag,{name:"p",components:n},"For example, if you wanted to create a nested atomic CSS structure (e.g. ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"atoms.padding.top.desktop"),"), which requires iterating over ",s.a.createElement(o.MDXTag,{name:"em",components:n,parentName:"p"},"both")," your white space scale ",s.a.createElement(o.MDXTag,{name:"em",components:n,parentName:"p"},"and")," your breakpoints, you could do the following:"),s.a.createElement(o.MDXTag,{name:"pre",components:n},s.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token comment">// atoms.treat.js</span>\n\n<span class="token keyword">import</span> <span class="token punctuation">{</span> styleTree <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'treat\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> mapValues <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'lodash\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">responsiveSpacingStyles</span> <span class="token operator">=</span> <span class="token parameter">property</span> <span class="token operator">=></span>\n  <span class="token function">styleTree</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">theme<span class="token punctuation">,</span> styleNode</span><span class="token punctuation">)</span> <span class="token operator">=></span>\n    <span class="token function">mapValues</span><span class="token punctuation">(</span>theme<span class="token punctuation">.</span>spacing<span class="token punctuation">,</span> <span class="token parameter">space</span> <span class="token operator">=></span>\n      <span class="token function">mapValues</span><span class="token punctuation">(</span>theme<span class="token punctuation">.</span>breakpoints<span class="token punctuation">,</span> <span class="token parameter">minWidth</span> <span class="token operator">=></span>\n        <span class="token function">styleNode</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n          <span class="token string">\'@media\'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n            <span class="token punctuation">[</span><span class="token template-string"><span class="token string">`screen and (min-width: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>minWidth<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px)`</span></span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n              <span class="token punctuation">[</span>property<span class="token punctuation">]</span><span class="token punctuation">:</span> space <span class="token operator">*</span> theme<span class="token punctuation">.</span>grid\n            <span class="token punctuation">}</span>\n          <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n      <span class="token punctuation">)</span>\n    <span class="token punctuation">)</span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">const</span> padding <span class="token operator">=</span> <span class="token punctuation">{</span>\n  top<span class="token punctuation">:</span> <span class="token function">responsiveSpacingStyles</span><span class="token punctuation">(</span><span class="token string">\'paddingTop\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  bottom<span class="token punctuation">:</span> <span class="token function">responsiveSpacingStyles</span><span class="token punctuation">(</span><span class="token string">\'paddingBottom\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  left<span class="token punctuation">:</span> <span class="token function">responsiveSpacingStyles</span><span class="token punctuation">(</span><span class="token string">\'paddingLeft\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  right<span class="token punctuation">:</span> <span class="token function">responsiveSpacingStyles</span><span class="token punctuation">(</span><span class="token string">\'paddingRight\'</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token comment">// etc...</span>\n'}}})),s.a.createElement(o.MDXTag,{name:"blockquote",components:n},s.a.createElement(o.MDXTag,{name:"p",components:n,parentName:"blockquote"},"Note: When using ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"styleTree"),", the ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"setup#babel-setup"}},"babel-plugin")," does not add a local debug name for you, as it is too complex to infer in most cases. However, you can still manually pass a local debug name to the ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"styleNode")," function you receive.")),s.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"globalstyle"}},"globalStyle"),s.a.createElement(o.MDXTag,{name:"p",components:n},"Type: ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"function")),s.a.createElement(o.MDXTag,{name:"p",components:n},"The ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"globalStyle")," function allows you to define selector-based styles. This function is purely a side effect and does not create a new class."),s.a.createElement(o.MDXTag,{name:"pre",components:n},s.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">import</span> <span class="token punctuation">{</span> globalStyle <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'treat\'</span><span class="token punctuation">;</span>\n\n<span class="token function">globalStyle</span><span class="token punctuation">(</span><span class="token string">\'html, body\'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  margin<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n  padding<span class="token punctuation">:</span> <span class="token number">0</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n'}}})))}}])&&c(a.prototype,t),p&&c(a,p),n}(s.a.Component),g=function(){arguments.length>0&&void 0!==arguments[0]&&arguments[0];return[{id:"createtheme",level:2,title:"createTheme",children:[]},{id:"style",level:2,title:"style",children:[]},{id:"stylemap",level:2,title:"styleMap",children:[]},{id:"styletree",level:2,title:"styleTree",children:[]},{id:"globalstyle",level:2,title:"globalStyle",children:[]}]},k={title:"Styling API"}},function(e,n,a){"use strict";a.r(n),a.d(n,"readingTime",(function(){return m})),a.d(n,"default",(function(){return d})),a.d(n,"tableOfContents",(function(){return g})),a.d(n,"frontMatter",(function(){return k}));var t=a(0),s=a.n(t),o=a(1);function p(e){return(p="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function r(e,n){if(null==e)return{};var a,t,s=function(e,n){if(null==e)return{};var a,t,s={},o=Object.keys(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||(s[a]=e[a]);return s}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(s[a]=e[a])}return s}function c(e,n){for(var a=0;a<n.length;a++){var t=n[a];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(e,t.key,t)}}function l(e,n){return!n||"object"!==p(n)&&"function"!=typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function i(e){return(i=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function u(e,n){return(u=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}var m={text:"2 min read",minutes:1.36,time:81600.00000000001,words:272},d=function(e){function n(e){var a;return function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,n),(a=l(this,i(n).call(this,e))).layout=null,a}var a,t,p;return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&u(e,n)}(n,e),a=n,(t=[{key:"render",value:function(){var e=this.props,n=e.components;return r(e,["components"]),s.a.createElement(o.MDXTag,{name:"wrapper",components:n},s.a.createElement(o.MDXTag,{name:"h1",components:n,props:{id:"webpack-options"}},"Webpack Options"),s.a.createElement(o.MDXTag,{name:"p",components:n},"The following options can be supplied to the included webpack plugin, e.g."),s.a.createElement(o.MDXTag,{name:"pre",components:n},s.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">const</span> TreatPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'treat/webpack-plugin\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n    <span class="token keyword">new</span> <span class="token class-name">TreatPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token comment">// Plugin options go here...</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n'}}})),s.a.createElement(o.MDXTag,{name:"p",components:n},"All configuration values are optional."),s.a.createElement(o.MDXTag,{name:"p",components:n},"Some configuration defaults differ between production and development environments. This is inferred from your ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://webpack.js.org/concepts/#mode"}},"webpack mode")," setting."),s.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"outputloaders"}},"outputLoaders"),s.a.createElement(o.MDXTag,{name:"p",components:n},s.a.createElement(o.MDXTag,{name:"em",components:n,parentName:"p"},"Default: ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"em"},"['style-loader']")),s.a.createElement("br",null),s.a.createElement(o.MDXTag,{name:"em",components:n,parentName:"p"},"Type: ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"em",props:{href:"https://webpack.js.org/configuration/module/#useentry"}},"Array of webpack loader configurations"))),s.a.createElement(o.MDXTag,{name:"p",components:n},"Defines which loaders generated CSS should be passed through after ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"css-loader"),". Strings (e.g. ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"style-loader"),") and objects with options are supported.",s.a.createElement("br",null)),s.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"test"}},"test"),s.a.createElement(o.MDXTag,{name:"p",components:n},s.a.createElement(o.MDXTag,{name:"em",components:n,parentName:"p"},"Default: ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"em"},"/.treat.(js|ts)$/")),s.a.createElement("br",null),s.a.createElement(o.MDXTag,{name:"em",components:n,parentName:"p"},"Type: ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"em",props:{href:"https://webpack.js.org/configuration/module/#rule-conditions"}},"Webpack condition"))),s.a.createElement(o.MDXTag,{name:"p",components:n},"Configures which files are considered to be treat files."),s.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"localidentname"}},"localIdentName"),s.a.createElement(o.MDXTag,{name:"p",components:n},s.a.createElement(o.MDXTag,{name:"em",components:n,parentName:"p"},"Default (Production): ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"em"},"'[hash:base64:5]'")),s.a.createElement("br",null),s.a.createElement(o.MDXTag,{name:"em",components:n,parentName:"p"},"Default (Development): ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"em"},"'[name]-[local]_[hash:base64:5]'")),s.a.createElement("br",null),s.a.createElement(o.MDXTag,{name:"em",components:n,parentName:"p"},"Type: ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"em"},"'string'"))),s.a.createElement(o.MDXTag,{name:"p",components:n},"Template string for naming CSS classes. Should always contain a ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"hash")," option to avoid clashes."),s.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"themeidentname"}},"themeIdentName"),s.a.createElement(o.MDXTag,{name:"p",components:n},s.a.createElement(o.MDXTag,{name:"em",components:n,parentName:"p"},"Default (Production): ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"em"},"'[hash:base64:4]'")),s.a.createElement("br",null),s.a.createElement(o.MDXTag,{name:"em",components:n,parentName:"p"},"Default (Development): ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"em"},"'_[name]-[local]_[hash:base64:4]'")),s.a.createElement("br",null),s.a.createElement(o.MDXTag,{name:"em",components:n,parentName:"p"},"Type: ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"em"},"string"))),s.a.createElement(o.MDXTag,{name:"p",components:n},"Same as ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"localIdentName"),", but for themes. Useful for debugging which classes belong to which theme. Can also be a function that receives your theme, which is useful for minifying theme classes, e.g. ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"theme => themeNames.indexOf(theme.name)"),"."),s.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"minify"}},"minify"),s.a.createElement(o.MDXTag,{name:"p",components:n},s.a.createElement(o.MDXTag,{name:"em",components:n,parentName:"p"},"Default (Production): ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"em"},"true")),s.a.createElement("br",null),s.a.createElement(o.MDXTag,{name:"em",components:n,parentName:"p"},"Default (Development): ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"em"},"false")),s.a.createElement("br",null),s.a.createElement(o.MDXTag,{name:"em",components:n,parentName:"p"},"Type: ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"em"},"boolean"))),s.a.createElement(o.MDXTag,{name:"p",components:n},"Configures whether to minify the generated CSS."),s.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"browsers"}},"browsers"),s.a.createElement(o.MDXTag,{name:"p",components:n},s.a.createElement(o.MDXTag,{name:"em",components:n,parentName:"p"},"Default: ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"em",props:{href:"https://github.com/browserslist/browserslist#config-file"}},"Browserslist config"),", if present."),s.a.createElement("br",null),s.a.createElement(o.MDXTag,{name:"em",components:n,parentName:"p"},"Type: ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"em",props:{href:"https://github.com/browserslist/browserslist"}},"Browserslist query"))),s.a.createElement(o.MDXTag,{name:"p",components:n},"Configures which browsers to target when running generated CSS through ",s.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://github.com/postcss/autoprefixer"}},"autoprefixer"),"."),s.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"outputcss"}},"outputCSS"),s.a.createElement(o.MDXTag,{name:"p",components:n},s.a.createElement(o.MDXTag,{name:"em",components:n,parentName:"p"},"Default: ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"em"},"true")),s.a.createElement("br",null),s.a.createElement(o.MDXTag,{name:"em",components:n,parentName:"p"},"Type: ",s.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"em"},"boolean"))),s.a.createElement(o.MDXTag,{name:"p",components:n},"Configures whether to output CSS in the resulting bundle. Useful for server rendered apps that have separate webpack builds for client and server code, only one of which needs to generate styles."))}}])&&c(a.prototype,t),p&&c(a,p),n}(s.a.Component),g=function(){arguments.length>0&&void 0!==arguments[0]&&arguments[0];return[{id:"outputloaders",level:2,title:"outputLoaders",children:[]},{id:"test",level:2,title:"test",children:[]},{id:"localidentname",level:2,title:"localIdentName",children:[]},{id:"themeidentname",level:2,title:"themeIdentName",children:[]},{id:"minify",level:2,title:"minify",children:[]},{id:"browsers",level:2,title:"browsers",children:[]},{id:"outputcss",level:2,title:"outputCSS",children:[]}]},k={title:"Webpack Options"}},function(e,n,a){"use strict";a.r(n);var t={};a.r(t),a.d(t,"base",(function(){return E})),a.d(t,"element",(function(){return v}));var s={};a.r(s),a.d(s,"root",(function(){return j}));var o={};a.r(o),a.d(o,"font",(function(){return O})),a.d(o,"weight",(function(){return I})),a.d(o,"color",(function(){return P})),a.d(o,"text",(function(){return A})),a.d(o,"heading",(function(){return L}));var p={};a.r(p),a.d(p,"code",(function(){return W}));var r={};a.r(r),a.d(r,"root",(function(){return F}));var c={};a.r(c),a.d(c,"link",(function(){return G}));var l={};a.r(l),a.d(l,"root",(function(){return V}));var i={};a.r(i),a.d(i,"link",(function(){return ee})),a.d(i,"active",(function(){return ne}));var u={};a.r(u),a.d(u,"fab",(function(){return ge})),a.d(u,"fab_isOpen",(function(){return ke})),a.d(u,"fab__bar",(function(){return he})),a.d(u,"menu",(function(){return fe})),a.d(u,"menu_isClosed",(function(){return ye})),a.d(u,"menu_isOpen",(function(){return be})),a.d(u,"backdrop",(function(){return Te})),a.d(u,"backdrop_isHidden",(function(){return we})),a.d(u,"backdrop_isVisible",(function(){return Ee})),a.d(u,"logoContainer",(function(){return ve})),a.d(u,"chevron",(function(){return Me})),a.d(u,"linksContainer",(function(){return De})),a.d(u,"links",(function(){return Se})),a.d(u,"subLink",(function(){return Xe})),a.d(u,"subLinkContainer",(function(){return Ne})),a.d(u,"activeSubLinkBar",(function(){return xe}));var m={};a.r(m),a.d(m,"content",(function(){return ze}));var d=a(0),g=a.n(d),k=a(6),h=a(4),f=a(5),y=a(2),b=a(1),T=a(3),w=a.n(T),E="_2NSQv",v={article:"_12yT0",aside:"_12yT0",details:"_12yT0",figcaption:"_12yT0",figure:"_12yT0",footer:"_12yT0",header:"_12yT0",hgroup:"_12yT0",menu:"_12yT0",nav:"_12yT0",section:"_12yT0",textarea:"_12yT0",ul:"_25LlE",ol:"_25LlE",blockquote:"_3jXqh",q:"_3jXqh",body:"_3oHjB",table:"_3mDI1",mark:"UVzPY",select:"_3xUz2"},M={paddingTop:{none:{mobile:"_1Fp9f",desktop:"_1PLNm"},xsmall:{mobile:"_10ZIz",desktop:"xp0jV"},small:{mobile:"_3SfgA",desktop:"_3ObXS"},medium:{mobile:"_13aP5",desktop:"_1CvmX"},large:{mobile:"_3UvtA",desktop:"_3trwz"},xlarge:{mobile:"_3BBqI",desktop:"_2XR0w"},xxlarge:{mobile:"aRtLp",desktop:"_2_Ol6"},xxxlarge:{mobile:"_2kgnQ",desktop:"_2ksz0"}},paddingBottom:{none:{mobile:"_1WLoT",desktop:"_1p3-v"},xsmall:{mobile:"_2a1xY",desktop:"_1zQIG"},small:{mobile:"_3nwlC",desktop:"_3s371"},medium:{mobile:"_35fG7",desktop:"_3t40e"},large:{mobile:"_21Oi0",desktop:"_1mtlg"},xlarge:{mobile:"_3YWFi",desktop:"_314bI"},xxlarge:{mobile:"pJeoa",desktop:"_7ZbAD"},xxxlarge:{mobile:"kDt71",desktop:"_3AeGb"}},paddingLeft:{none:{mobile:"_1mQJS",desktop:"_1QB85"},xsmall:{mobile:"_3VD8U",desktop:"_3-JtP"},small:{mobile:"_2CoA2",desktop:"_2CY_v"},medium:{mobile:"_17Hbh",desktop:"_2r_-L"},large:{mobile:"_1t0Wl",desktop:"_2l-Vh"},xlarge:{mobile:"xhbfE",desktop:"_3pYHr"},xxlarge:{mobile:"_35yp7",desktop:"_2Nt_N"},xxxlarge:{mobile:"Apu26",desktop:"a0r5U"}},paddingRight:{none:{mobile:"L0BiR",desktop:"xvfty"},xsmall:{mobile:"_2YVEc",desktop:"_16f_q"},small:{mobile:"_1nHEi",desktop:"_3r0qC"},medium:{mobile:"_1EqCn",desktop:"_1_3Mc"},large:{mobile:"_3chin",desktop:"_3-_sh"},xlarge:{mobile:"d7UIW",desktop:"_1ESaj"},xxlarge:{mobile:"_22EiD",desktop:"_3V1US"},xxxlarge:{mobile:"_8ZfpI",desktop:"_3VsLi"}},marginTop:{none:{mobile:"QEGd4",desktop:"_20bOO"},xsmall:{mobile:"_2Dyt1",desktop:"WbAYJ"},small:{mobile:"_2ahwm",desktop:"_3PGqs"},medium:{mobile:"iAa5-",desktop:"_2cpn-"},large:{mobile:"_3bw4-",desktop:"sl-cj"},xlarge:{mobile:"_12xgI",desktop:"R0fzu"},xxlarge:{mobile:"CUzfW",desktop:"_23SeZ"},xxxlarge:{mobile:"_3Qu5F",desktop:"_1A23Z"}},marginBottom:{none:{mobile:"_2qM8s",desktop:"_1t_Xq"},xsmall:{mobile:"_1M_sp",desktop:"zFHu-"},small:{mobile:"_19HPD",desktop:"_1UCy2"},medium:{mobile:"_3vFY_",desktop:"_3ZfUC"},large:{mobile:"_10VpE",desktop:"_31GVg"},xlarge:{mobile:"J3rYC",desktop:"_22_kZ"},xxlarge:{mobile:"_2hrT8",desktop:"_1dXaV"},xxxlarge:{mobile:"OuKNA",desktop:"_1PEQ2"}},marginLeft:{none:{mobile:"_1GcUz",desktop:"Cfkx7"},xsmall:{mobile:"_37H_0",desktop:"_1rI1D"},small:{mobile:"KfeNT",desktop:"_1MN_r"},medium:{mobile:"FXErj",desktop:"_qQwJ"},large:{mobile:"_3_urg",desktop:"_2YQ_F"},xlarge:{mobile:"_3KIxX",desktop:"_2pZvS"},xxlarge:{mobile:"RGrGt",desktop:"_2oWSd"},xxxlarge:{mobile:"_3qBN_",desktop:"_36Gtj"}},marginRight:{none:{mobile:"_2p0ll",desktop:"_3jdwC"},xsmall:{mobile:"_1g6m6",desktop:"_3bkGM"},small:{mobile:"Ozqrm",desktop:"hWXxR"},medium:{mobile:"_2Dg9L",desktop:"_1lxjO"},large:{mobile:"_3iGzj",desktop:"_1EqCF"},xlarge:{mobile:"_1Yz5w",desktop:"_2BPPS"},xxlarge:{mobile:"_24a7B",desktop:"gqYz9"},xxxlarge:{mobile:"_2hHe6",desktop:"_23LP7"}},display:{none:{mobile:"_25mpJ",desktop:"_2ubsM"},block:{mobile:"_3HBjU",desktop:"_2-gjR"},inline:{mobile:"_3LOKh",desktop:"_1xIqj"},"inline-block":{mobile:"_3o6Zs",desktop:"_1nsIC"},flex:{mobile:"x2CIq",desktop:"_1GHBZ"},"inline-flex":{mobile:"_2ry0H",desktop:"_1AgkM"}},alignItems:{"flex-start":{mobile:"_2z0XD",desktop:"_1PIei"},flexEnd:{mobile:"_3ylL1",desktop:"fcZDM"},center:{mobile:"_3ngC_",desktop:"_1pYkS"}},justifyContent:{"flex-start":{mobile:"aTznT",desktop:"DO6E2"},"flex-end":{mobile:"_16VD4",desktop:"_2geFn"},center:{mobile:"_24T1o",desktop:"_1_4nw"}},flexGrow:{0:{mobile:"_1xQYl",desktop:"_1TZkK"},1:{mobile:"_3hycp",desktop:"_3keA-"}},flexShrink:{0:{mobile:"_21Tc1",desktop:"_1tYdO"},1:{mobile:"_3ng74",desktop:"_1R4j1"}}};function D(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function S(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function X(e,n){if(null==e)return{};var a,t,s=function(e,n){if(null==e)return{};var a,t,s={},o=Object.keys(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||(s[a]=e[a]);return s}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(s[a]=e[a])}return s}function N(e){return(N="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function x(e,n){if(void 0!==n){if("object"===N(n)){var a="";for(var t in n){var s=n[t];a+="".concat(e[s][t]," ")}return a.slice(0,-1)}return e[n].mobile}}var _=function(e){var n=e.component,a=void 0===n?"div":n,s=e.className,o=e.paddingTop,p=e.paddingBottom,r=e.paddingLeft,c=e.paddingRight,l=e.marginTop,i=e.marginBottom,u=e.marginLeft,m=e.marginRight,g=e.display,k=e.alignItems,h=e.justifyContent,f=e.flexGrow,b=e.flexShrink,T=X(e,["component","className","paddingTop","paddingBottom","paddingLeft","paddingRight","marginTop","marginBottom","marginLeft","marginRight","display","alignItems","justifyContent","flexGrow","flexShrink"]),E=Object(y.useStyles)(t),v=Object(y.useStyles)(M),N=w()(s,E.base,E.element[a],x(v.paddingTop,o),x(v.paddingBottom,p),x(v.paddingLeft,r),x(v.paddingRight,c),x(v.marginTop,l),x(v.marginBottom,i),x(v.marginLeft,u),x(v.marginRight,m),x(v.display,g),x(v.alignItems,k),x(v.justifyContent,h),x(v.flexGrow,f),x(v.flexShrink,b));return Object(d.createElement)(a,function(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?D(a,!0).forEach((function(n){S(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):D(a).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}({className:N},T))},j="$_30DVC",C=function(e){var n=e.children,a=Object(y.useStyles)(s),t={mobile:"large",desktop:"xlarge"};return g.a.createElement(_,{className:a.root,paddingLeft:t,paddingRight:t},n)},O={heading:"$p8-bl",body:"$_1-VGO"},I={regular:"$_4r1dw",strong:"$_1jcs8"},P={strong:"$_3epw4",neutral:"$_2yBs8",code:"$_1dXPT"},A={standard:{fontSize:"$_1ngDw",transform:"$zeXa4"},small:{fontSize:"$n-Jq5",transform:"$_1zaML"},xsmall:{fontSize:"$_3xXGX",transform:"$_3_09b"},code:{fontSize:"$_2K8a_",transform:"$_1NRCy"}},L={1:{fontSize:"$_2zJBy",transform:"$TMw1l"},2:{fontSize:"$_3UR8e",transform:"$_3ee6h"},3:{fontSize:"$_2o0A0",transform:"$_8RvIg"}};var R=function(e){var n,a,t,s=e.component,p=void 0===s?"p":s,r=e.size,c=void 0===r?"standard":r,l=e.color,i=void 0===l?"neutral":l,u=e.weight,m=void 0===u?"regular":u,d=e.baseline,k=void 0===d||d,h=e.children,f=Object(y.useStyles)(o);return g.a.createElement(_,{component:p,className:w()(f.font.body,f.text[c].fontSize,f.color[i],f.weight[m],(n={},a=f.text.standard.transform,t=k,a in n?Object.defineProperty(n,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[a]=t,n))},h)},B=function(e){var n=e.id;return g.a.createElement("a",{id:n,className:"zOUcz"})};function H(){return(H=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var a=arguments[n];for(var t in a)Object.prototype.hasOwnProperty.call(a,t)&&(e[t]=a[t])}return e}).apply(this,arguments)}var q=function(e){var n=e.level,a=e.children,t=e.id,s=Object(y.useStyles)(o),p=Object(d.createElement)(function(e){if("1"===e)return"h1";if("2"===e)return"h2";if("3"===e)return"h3";throw new Error("No valid heading level")}(n),{className:w()(s.font.heading,s.color.strong,s.heading[n].fontSize,s.heading[n].transform)},a);return"2"===n?g.a.createElement(d.Fragment,null,g.a.createElement(B,{id:t}),g.a.createElement("a",{style:{textDecoration:"none"},href:"#".concat(t)},p)):p},W="$_359SG",z=function(e){var n=e.children,a=Object(y.useStyles)(p);return g.a.createElement(_,{component:"code",className:a.code},n)},F="$_3LobY",J=a(7),G="_1rYrD";function $(){return($=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var a=arguments[n];for(var t in a)Object.prototype.hasOwnProperty.call(a,t)&&(e[t]=a[t])}return e}).apply(this,arguments)}function U(e,n){if(null==e)return{};var a,t,s=function(e,n){if(null==e)return{};var a,t,s={},o=Object.keys(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||(s[a]=e[a]);return s}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(s[a]=e[a])}return s}var Y=function(e){var n,a,t,s=e.to,p=e.baseline,r=e.size,l=void 0===r?"standard":r,i=e.className,u=U(e,["to","baseline","size","className"]),m=Object(y.useStyles)(o),d=Object(y.useStyles)(c),k=w()(i,d.link,m.font.body,m.text[l].fontSize,(n={},a=m.text[l].transform,t=p,a in n?Object.defineProperty(n,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[a]=t,n));return"string"==typeof s&&/^http/.test(s)?g.a.createElement("a",$({href:s},u,{className:k})):"string"==typeof s&&s.indexOf("#")>-1?g.a.createElement(J.HashLink,$({to:s},u,{className:k})):g.a.createElement(h.Link,$({onClick:function(){window.scrollTo(0,0)},to:s},u,{className:k}))},V="$_1Pq8n";function Q(e,n){if(null==e)return{};var a,t,s=function(e,n){if(null==e)return{};var a,t,s={},o=Object.keys(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||(s[a]=e[a]);return s}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(s[a]=e[a])}return s}function Z(){return(Z=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var a=arguments[n];for(var t in a)Object.prototype.hasOwnProperty.call(a,t)&&(e[t]=a[t])}return e}).apply(this,arguments)}var K={p:function(e){return g.a.createElement(_,{component:"p",paddingBottom:"xlarge"},g.a.createElement(R,{component:"span"},e.children))},h1:function(e){return g.a.createElement(_,{marginTop:"medium",marginBottom:"xxlarge"},g.a.createElement(q,H({level:"1"},e)))},h2:function(e){return g.a.createElement(q,H({level:"2"},e))},h3:function(e){return g.a.createElement(q,H({level:"3"},e))},pre:function(e){return g.a.createElement(_,Z({component:"pre",paddingBottom:"large"},e))},code:function(e){var n=Object(y.useStyles)(r),a={mobile:"large",desktop:"xlarge"};return g.a.createElement(_,{className:n.root,marginBottom:{mobile:"small",desktop:"xlarge"}},g.a.createElement(_,{paddingTop:a,paddingBottom:a,paddingLeft:a,paddingRight:a},g.a.createElement(R,{size:"code",component:"div",color:"code",baseline:!1},g.a.createElement(z,null,g.a.createElement("span",e)))))},inlineCode:z,th:function(e){return g.a.createElement(R,{component:"th",weight:"strong"},e.children)},td:function(e){return g.a.createElement(R,{component:"td"},e.children)},a:function(e){var n=e.href,a=(e.size,Q(e,["href","size"]));return n?g.a.createElement(Y,Z({to:n},a)):g.a.createElement("a",a)},blockquote:function(e){var n=Object(y.useStyles)(l);return g.a.createElement(_,{paddingLeft:"xlarge",paddingRight:"xlarge",paddingTop:"xlarge",marginBottom:"xlarge",className:n.root},e.children)}},ee="$_3HInj",ne="$_3I4HD";function ae(){return(ae=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var a=arguments[n];for(var t in a)Object.prototype.hasOwnProperty.call(a,t)&&(e[t]=a[t])}return e}).apply(this,arguments)}function te(e,n){if(null==e)return{};var a,t,s=function(e,n){if(null==e)return{};var a,t,s={},o=Object.keys(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||(s[a]=e[a]);return s}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(s[a]=e[a])}return s}var se=function(e){var n,a,t,s=e.baseline,p=e.size,r=void 0===p?"standard":p,c=e.children,l=te(e,["baseline","size","children"]),u=Object(y.useStyles)(o),m=Object(y.useStyles)(i);return g.a.createElement(h.NavLink,ae({},l,{className:w()(m.link,u.font.body,u.text[r].fontSize,(n={},a=u.text[r].transform,t=s,a in n?Object.defineProperty(n,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[a]=t,n)),activeClassName:m.active}),c)},oe=a(8).map((function(e,n){var t=e.fileName,s=e.route,o=e.id,p=e.sections,r=a(12)("./".concat(t)),c=r.frontMatter;return{Component:r.default,title:c.title,route:s,index:n,id:o,sections:p}})),pe=a(9),re=a.n(pe),ce=a(10),le=a.n(ce);function ie(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){if(!(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e)))return;var a=[],t=!0,s=!1,o=void 0;try{for(var p,r=e[Symbol.iterator]();!(t=(p=r.next()).done)&&(a.push(p.value),!n||a.length!==n);t=!0);}catch(e){s=!0,o=e}finally{try{t||null==r.return||r.return()}finally{if(s)throw o}}return a}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}var ue=null,me=new Set,de=function(e){e!=ue&&(ue=e,me.forEach((function(e){e(ue)})))},ge="BxvzV",ke="yJiH8",he="_3oIdk",fe="$Gvbnt",ye="_2OCYK",be="_25a2x",Te="$_1CtRb",we="_2csiM",Ee="Ob-OE",ve="_3DFCj",Me="_3_AOd",De="_1Qp7z",Se="_31M3S",Xe="_3UQGS",Ne="_3vWuD",xe="SG4o7";function _e(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){if(!(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e)))return;var a=[],t=!0,s=!1,o=void 0;try{for(var p,r=e[Symbol.iterator]();!(t=(p=r.next()).done)&&(a.push(p.value),!n||a.length!==n);t=!0);}catch(e){s=!0,o=e}finally{try{t||null==r.return||r.return()}finally{if(s)throw o}}return a}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}var je=function(e){var n=e.open,a=e.onClick,t=Object(y.useStyles)(u);return g.a.createElement(_,{onClick:a,className:w()(t.fab,n?t.fab_isOpen:null)},g.a.createElement(_,{className:t.fab__bar}),g.a.createElement(_,{className:t.fab__bar}),g.a.createElement(_,{className:t.fab__bar}))},Ce=function(e){var n=e.href,a=e.title,t=e.children,s=e.onClick;return g.a.createElement(d.Fragment,null,g.a.createElement(_,{paddingBottom:"xsmall"},g.a.createElement(se,{size:"xsmall",to:n,exact:!0,onClick:s},a)),g.a.createElement(_,{paddingBottom:"large"},t))},Oe=function(e){var n=e.children,a=e.to,t=e.hash,s=e.active,o=e.onClick,p=Object(y.useStyles)(u);return g.a.createElement(_,{className:p.subLinkContainer,paddingLeft:"medium",key:t},s?g.a.createElement("div",{className:p.activeSubLinkBar}):null,g.a.createElement(Y,{size:"small",to:"".concat(a).concat(t?"#".concat(t):""),onClick:o,className:p.subLink,style:s?{fontWeight:"bold"}:void 0},n))},Ie=function(){var e=Object(y.useStyles)(u),n=_e(Object(d.useState)(!1),2),a=n[0],t=n[1],s=function(){t(!1)},o=function(){var e=ie(Object(d.useState)(ue),2),n=e[0],a=e[1];return Object(d.useEffect)((function(){return me.add(a),a(ue),function(){me.delete(a)}}),[]),n}(),p=function(){window.scrollTo(0,0),s()};return g.a.createElement(d.Fragment,null,g.a.createElement(je,{open:a,onClick:function(){return t((function(e){return!e}))}}),g.a.createElement(_,{className:w()(e.backdrop,a?e.backdrop_isVisible:e.backdrop_isHidden),onClick:s}),g.a.createElement(_,{paddingTop:{mobile:"medium",desktop:"xlarge"},paddingBottom:"large",className:w()(e.menu,a?e.menu_isOpen:e.menu_isClosed)},g.a.createElement(C,null,g.a.createElement(_,{paddingTop:{mobile:"large",desktop:"medium"},paddingLeft:{mobile:"medium",desktop:"none"},className:e.linksContainer},g.a.createElement("div",{className:e.links},oe.map((function(e){var n=e.title,a=e.route,t=e.sections;return g.a.createElement(d.Fragment,{key:a},g.a.createElement(Ce,{title:n,href:a,onClick:p},t.filter((function(e){return 2===e.level})).map((function(e){var n=e.hash,t=e.name;return g.a.createElement(Oe,{key:t,to:a,hash:n,active:n===o,onClick:s},t)}))))})),g.a.createElement(Ce,{title:"Community",href:"https://www.github.com/seek-oss/treat"},g.a.createElement(Oe,{to:"https://www.github.com/seek-oss/treat"},"GitHub"),g.a.createElement(Oe,{to:"https://spectrum.chat/treatcss"},"Spectrum")))))))},Pe={down:null,up:"_1C82Y",left:"_1X6Qk",right:"HwZE9"},Ae=function(e){var n=e.direction,a=void 0===n?"down":n;return g.a.createElement("svg",{width:"16",height:"16",viewBox:"0 0 1024 1024",className:w()("_1gD-q",Pe[a])},g.a.createElement("path",{d:"M945 266l78 67-510 524-510-524 75-69 435 451 432-449z"}))},Le=function(e){var n=e.title,a=e.route,t=e.direction;return g.a.createElement(_,{display:"flex",alignItems:"center",justifyContent:"center",paddingTop:"xxlarge",paddingBottom:"xxxlarge"},"left"===t?g.a.createElement(Ae,{direction:"left"}):null,g.a.createElement(_,{display:"inline-block",marginLeft:"small",marginRight:"small"},g.a.createElement(Y,{to:a},n)),"right"===t?g.a.createElement(Ae,{direction:"right"}):null)},Re=a(11),Be=a.n(Re);function He(){return(He=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var a=arguments[n];for(var t in a)Object.prototype.hasOwnProperty.call(a,t)&&(e[t]=a[t])}return e}).apply(this,arguments)}var qe=function(e){var n,a,t=e.component,s=e.prevDoc,o=e.nextDoc,p=e.hashes;return n=p,a=re()().location,de(a.hash.substring(1)),Object(d.useEffect)((function(){var e=le()((function(){if(window.scrollY+window.innerHeight>=document.documentElement.offsetHeight)return de(n[n.length-1]);var e=n.map((function(e){var n=document.querySelector("#".concat(e));return n?{pos:n.getBoundingClientRect().top-30,hash:e}:{pos:1,hash:e}})).filter((function(e){return e.pos<0})).sort((function(e,n){var a=e.pos;return n.pos-a}));e[0]&&de(e[0].hash)}),50,{leading:!1});return window.addEventListener("scroll",e),function(){window.removeEventListener("scroll",e)}}),n),g.a.createElement("div",null,g.a.createElement(t,null),s&&g.a.createElement("div",{style:{float:"left"}},g.a.createElement(Le,He({direction:"left"},s))),o&&g.a.createElement("div",{style:{float:"right"}},g.a.createElement(Le,He({direction:"right"},o))))},We=function(){return g.a.createElement(_,{paddingBottom:"xxxlarge"},g.a.createElement(h.Link,{to:""},g.a.createElement("img",{src:Be.a,height:"36",style:{position:"relative",left:-6},alt:"treat"})),oe.map((function(e,n){var a=e.route,t=e.Component,s=e.title,o=e.sections,p=oe[n-1],r=oe[n+1],c="treat".concat(n?" – ".concat(s," "):"").trim(),l=n>0?null:"Themeable, statically extracted CSS-in-JS with near-zero runtime.",i=o.map((function(e){return e.hash}));return g.a.createElement(h.Route,{key:a,path:a,exact:!0,render:function(){return g.a.createElement(d.Fragment,null,g.a.createElement(f.Title,null,c),g.a.createElement(f.Meta,{property:"og:title",content:c}),g.a.createElement(f.Meta,{name:"twitter:title",content:c}),l?g.a.createElement(d.Fragment,null,g.a.createElement(f.Meta,{name:"description",content:l}),g.a.createElement(f.Meta,{property:"og:description",content:l}),g.a.createElement(f.Meta,{name:"twitter:description",content:l})):null,g.a.createElement(qe,{nextDoc:r,prevDoc:p,hashes:i,component:t}))}})})))},ze="$RSpIA",Fe=function(){var e=Object(y.useStyles)(m);return g.a.createElement("div",{className:e.content},g.a.createElement(C,null,g.a.createElement(_,{paddingTop:{mobile:"large",desktop:"xxlarge"}},g.a.createElement(We,null))))},Je=function(){return g.a.createElement(y.TreatProvider,{theme:"_2g"},g.a.createElement(b.MDXProvider,{components:K},g.a.createElement(Ie,null),g.a.createElement(Fe,null)))},Ge=function(e){return"".concat("https://seek-oss.github.io").concat(e)};n.default=function(e){var n=e.route,a=e.clientStats,t=a.publicPath,s=a.entrypoints,o=function(e){return e.endsWith("/")?e.substr(0,e.length-1):e}(t),p=function(e){return"".concat(t).concat(e)},r=s.main.assets,c=r.filter((function(e){return e.endsWith(".css")})).map((function(e){return'<link rel="stylesheet" href="'.concat(p(e),'"></link>')})),l=r.filter((function(e){return e.endsWith(".js")})).map((function(e){return'<script src="'.concat(p(e),'"><\/script>')})),i=[],u=function(e,n,a){return Object(k.renderToString)(g.a.createElement(h.StaticRouter,{location:e,basename:a},g.a.createElement(f.HeadProvider,{headTags:n},g.a.createElement(Je,null))))}(n,i,o),m=function(e){return'<link rel="icon" type="image/png" sizes="'.concat(e,"x").concat(e,'" href="').concat(Ge(p("favicon-".concat(e,"x").concat(e,".png"))),'" />')},y=Ge(p("og-image.png"));return'<html>\n    <head>\n      <link href="https://fonts.googleapis.com/css?family=DM+Sans:700&display=swap" rel="stylesheet">\n      '.concat(c.join("\n"),"\n      ").concat(Object(k.renderToString)(g.a.createElement(d.Fragment,null,i)),'\n      <meta name="viewport" content="width=device-width, initial-scale=1">\n      ').concat(m(16),"\n      ").concat(m(32),"\n      ").concat(m(96),'\n      <meta property="og:image" content="').concat(y,'" />\n      <meta property="og:image:width" content="1200">\n      <meta property="og:image:height" content="600">\n      <meta property="og:type" content="website">\n      <meta property="og:site_name" content="treat">\n      <meta name="twitter:card" content="summary_large_image">\n      <meta name="twitter:image" content="').concat(y,'" />\n    </head>\n    <body>\n        <div id="app">').concat(u,"</div>\n        <script>window.BASE_URL = ").concat(JSON.stringify(o),";<\/script>\n        ").concat(l.join("\n"),"\n    </body>\n  </html>")}}]).default}));